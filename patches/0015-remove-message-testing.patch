From b704048a8bdc9c0f93c739f035e50d24695843c6 Mon Sep 17 00:00:00 2001
From: ArjanSchouten <arjan.schouten@solureal.com>
Date: Thu, 7 Sep 2023 09:33:47 +0200
Subject: [PATCH] remove message testing

---
 test/testutils.js | 72 -----------------------------------------------
 1 file changed, 72 deletions(-)

diff --git a/test/testutils.js b/test/testutils.js
index cd0e16f..ae8b2cf 100644
--- a/test/testutils.js
+++ b/test/testutils.js
@@ -497,78 +497,6 @@ var commons;
         context
       );
 
-      // ensure that every result has a corresponding message
-      if (testOptions.verifyMessage !== false) {
-        const messages = axe._audit.data.checks[checkId].messages;
-        const messageKey = this._data && this._data.messageKey;
-
-        // see how the check is used to know where to find the message
-        // e.g. a check used only in the `none` array of a rule will look at
-        // the messageKey of a passing result in the `fail` messages
-        let keyResult = result;
-        const isNoneCheck = noneChecks.indexOf(checkId) !== -1;
-        if (isNoneCheck) {
-          keyResult =
-            result === true ? false : result === false ? true : result;
-        }
-
-        const key =
-          keyResult === true
-            ? 'pass'
-            : keyResult === false
-            ? 'fail'
-            : 'incomplete';
-        const noneCheckMessage = isNoneCheck
-          ? '. Note that since this check is only used in the "none" array of all rules, the messages use the inverse of the result (e.g. a result of false uses the "pass" messages)'
-          : '';
-
-        assert.exists(
-          messages[key],
-          'Missing "' +
-            key +
-            '" message for check result of ' +
-            result +
-            noneCheckMessage
-        );
-        if (messageKey) {
-          assert.exists(
-            messages[key][messageKey],
-            'Missing ' +
-              key +
-              ' message key "' +
-              messageKey +
-              '" for check result of ' +
-              result +
-              noneCheckMessage
-          );
-
-          const message = axe.utils.processMessage(
-            messages[key][messageKey],
-            this._data
-          );
-          assert.isTrue(
-            message.indexOf('${') === -1,
-            'Data object missing properties for ' +
-              key +
-              ' message key "' +
-              messageKey +
-              '": "' +
-              message +
-              '"'
-          );
-        } else {
-          const message = axe.utils.processMessage(messages[key], this._data);
-          assert.isTrue(
-            message.indexOf('${') === -1,
-            'Data object missing properties for ' +
-              key +
-              ' message: "' +
-              message +
-              '"'
-          );
-        }
-      }
-
       return result;
     };
     return evaluateWrapper;
-- 
2.39.2 (Apple Git-143)

