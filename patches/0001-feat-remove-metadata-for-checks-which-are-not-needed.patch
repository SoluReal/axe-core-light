From 664a2e04994dc4d9006c88d8fdcdf25e4f7bacb3 Mon Sep 17 00:00:00 2001
From: ArjanSchouten <arjan.schouten@solureal.com>
Date: Mon, 19 Jun 2023 20:13:16 +0200
Subject: [PATCH 1/7] feat: remove metadata for checks which are not needed for
 my usecase and only support latest 2 chrome versions.

---
 .babelrc                                      |   10 +-
 axe.d.ts                                      |   24 -
 build/build-manual.js                         |    1 +
 build/configure.js                            |   19 -
 doc/rule-descriptions.md                      |  226 ++--
 lib/core/base/audit.js                        |   36 -
 lib/core/constants.js                         |    1 -
 lib/core/public/configure.js                  |    2 -
 lib/core/public/get-rules.js                  |    5 -
 lib/core/utils/get-environment-data.js        |   28 -
 locales/_template.json                        | 1066 +----------------
 package-lock.json                             |   18 +-
 package.json                                  |    3 +-
 test/core/base/audit.js                       |  208 +---
 test/core/public/configure.js                 |   18 -
 test/core/public/get-rules.js                 |   57 -
 test/core/public/run-rules.js                 |   17 -
 test/core/public/run-virtual-rule.js          |    2 -
 test/core/reporters/na.js                     |   24 -
 test/core/reporters/no-passes.js              |   18 -
 test/core/reporters/raw-env.js                |    8 -
 test/core/reporters/raw.js                    |    3 -
 test/core/reporters/v1.js                     |   31 -
 test/core/reporters/v2.js                     |   21 -
 test/core/utils/aggregateResult.js            |    3 -
 .../core/utils/collect-results-from-frames.js |  472 ++++----
 test/core/utils/get-environment-data.js       |   42 -
 test/integration/full/all-rules/all-rules.js  |    2 -
 test/integration/full/async/async.js          |    5 -
 .../full/run-partial/after-method.js          |    2 -
 .../run-partial/context-size-focusable.js     |    2 -
 .../integration/full/run-partial/initiator.js |    2 -
 .../full/run-partial/page-level.js            |    2 -
 test/testutils.js                             |   75 +-
 typings/axe-core/axe-core-tests.ts            |    3 -
 35 files changed, 369 insertions(+), 2087 deletions(-)

diff --git a/.babelrc b/.babelrc
index 73a2076a..1320b9a3 100644
--- a/.babelrc
+++ b/.babelrc
@@ -1,11 +1,3 @@
 {
-  "presets": ["@babel/preset-env"],
-  "plugins": [
-    [
-      "@babel/plugin-proposal-object-rest-spread",
-      {
-        "loose": true
-      }
-    ]
-  ]
+  "presets": ["@babel/preset-env"]
 }
diff --git a/axe.d.ts b/axe.d.ts
index c174b24c..bd8cfc6e 100644
--- a/axe.d.ts
+++ b/axe.d.ts
@@ -106,20 +106,6 @@ declare namespace axe {
 
   type RunCallback<T = AxeResults> = (error: Error, results: T) => void;
 
-  interface TestEngine {
-    name: string;
-    version: string;
-  }
-  interface TestRunner {
-    name: string;
-  }
-  interface TestEnvironment {
-    userAgent: string;
-    windowWidth: number;
-    windowHeight: number;
-    orientationAngle?: number;
-    orientationType?: string;
-  }
   interface RunOnly {
     type: RunOnlyType;
     values: TagValue[] | string[];
@@ -153,9 +139,6 @@ declare namespace axe {
     inapplicable: Result[];
   }
   interface Result {
-    description: string;
-    help: string;
-    helpUrl: string;
     id: string;
     impact?: ImpactValue;
     tags: TagValue[];
@@ -295,9 +278,6 @@ declare namespace axe {
   }
   interface RuleMetadata {
     ruleId: string;
-    description: string;
-    help: string;
-    helpUrl: string;
     tags: string[];
     actIds?: string[];
   }
@@ -370,11 +350,7 @@ declare namespace axe {
   }
 
   interface EnvironmentData {
-    testEngine: TestEngine;
-    testRunner: TestRunner;
-    testEnvironment: TestEnvironment;
     url: string;
-    timestamp: string;
   }
 
   let version: string;
diff --git a/build/build-manual.js b/build/build-manual.js
index d86ee1d3..c3266a96 100644
--- a/build/build-manual.js
+++ b/build/build-manual.js
@@ -22,6 +22,7 @@ module.exports = function build(grunt, options, commons, callback) {
           }
         }
       });
+      delete json.metadata
       return json;
     });
   }
diff --git a/build/configure.js b/build/configure.js
index 79ff1b58..46bba050 100644
--- a/build/configure.js
+++ b/build/configure.js
@@ -6,15 +6,8 @@ var clone = require('clone');
 var doT = require('@deque/dot');
 var templates = require('./templates');
 var buildManual = require('./build-manual');
-var entities = new (require('html-entities').AllHtmlEntities)();
-var packageJSON = require('../package.json');
 var doTRegex = /\{\{.+?\}\}/g;
 
-var axeVersion = packageJSON.version.substring(
-  0,
-  packageJSON.version.lastIndexOf('.')
-);
-
 var descriptionTableHeader =
   '| Rule ID | Description | Impact | Tags | Issue Type | ACT Rules |\n| :------- | :------- | :------- | :------- | :------- | :------- |\n';
 
@@ -99,16 +92,6 @@ function buildRules(grunt, options, commons, callback) {
     var rules = result.rules;
     var checks = result.checks;
 
-    // Translate checks before parsing them so that translations
-    // get applied to the metadata object
-    if (locale && locale.checks) {
-      checks.forEach(function (check) {
-        if (locale.checks[check.id] && check.metadata) {
-          check.metadata.messages = locale.checks[check.id];
-        }
-      });
-    }
-
     parseChecks(checks);
 
     function parseMetaData(source, propType) {
@@ -364,8 +347,6 @@ function buildRules(grunt, options, commons, callback) {
       var actLinks = createActLinksForRule(rule);
 
       rules.push([
-        `[${rule.id}](https://dequeuniversity.com/rules/axe/${axeVersion}/${rule.id}?application=RuleDescription)`,
-        entities.encode(rule.metadata.description),
         impact,
         rule.tags.join(', '),
         issueType.join(', '),
diff --git a/doc/rule-descriptions.md b/doc/rule-descriptions.md
index 9a632695..14de53f2 100644
--- a/doc/rule-descriptions.md
+++ b/doc/rule-descriptions.md
@@ -12,144 +12,144 @@
 
 ## WCAG 2.0 Level A & AA Rules
 
-| Rule ID                                                                                                                          | Description                                                                                                                                           | Impact                   | Tags                                                                                           | Issue Type                 | ACT Rules                                                                                                                                                                                                                                                          |
-| :------------------------------------------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------- | :--------------------------------------------------------------------------------------------- | :------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
-| [area-alt](https://dequeuniversity.com/rules/axe/4.7/area-alt?application=RuleDescription)                                       | Ensures &lt;area&gt; elements of image maps have alternate text                                                                                       | Critical                 | cat.text-alternatives, wcag2a, wcag244, wcag412, section508, section508.22.a, ACT, TTv5, TT6.a | failure, needs&nbsp;review | [c487ae](https://act-rules.github.io/rules/c487ae)                                                                                                                                                                                                                 |
-| [aria-allowed-attr](https://dequeuniversity.com/rules/axe/4.7/aria-allowed-attr?application=RuleDescription)                     | Ensures ARIA attributes are allowed for an element&apos;s role                                                                                        | Serious, Critical        | cat.aria, wcag2a, wcag412                                                                      | failure, needs&nbsp;review | [5c01ea](https://act-rules.github.io/rules/5c01ea)                                                                                                                                                                                                                 |
-| [aria-command-name](https://dequeuniversity.com/rules/axe/4.7/aria-command-name?application=RuleDescription)                     | Ensures every ARIA button, link and menuitem has an accessible name                                                                                   | Serious                  | cat.aria, wcag2a, wcag412, ACT, TTv5, TT6.a                                                    | failure, needs&nbsp;review | [97a4e1](https://act-rules.github.io/rules/97a4e1)                                                                                                                                                                                                                 |
-| [aria-hidden-body](https://dequeuniversity.com/rules/axe/4.7/aria-hidden-body?application=RuleDescription)                       | Ensures aria-hidden=&apos;true&apos; is not present on the document body.                                                                             | Critical                 | cat.aria, wcag2a, wcag412                                                                      | failure                    |                                                                                                                                                                                                                                                                    |
-| [aria-hidden-focus](https://dequeuniversity.com/rules/axe/4.7/aria-hidden-focus?application=RuleDescription)                     | Ensures aria-hidden elements are not focusable nor contain focusable elements                                                                         | Serious                  | cat.name-role-value, wcag2a, wcag412                                                           | failure, needs&nbsp;review | [6cfa84](https://act-rules.github.io/rules/6cfa84)                                                                                                                                                                                                                 |
-| [aria-input-field-name](https://dequeuniversity.com/rules/axe/4.7/aria-input-field-name?application=RuleDescription)             | Ensures every ARIA input field has an accessible name                                                                                                 | Moderate, Serious        | cat.aria, wcag2a, wcag412, ACT, TTv5, TT5.c                                                    | failure, needs&nbsp;review | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
-| [aria-meter-name](https://dequeuniversity.com/rules/axe/4.7/aria-meter-name?application=RuleDescription)                         | Ensures every ARIA meter node has an accessible name                                                                                                  | Serious                  | cat.aria, wcag2a, wcag111                                                                      | failure, needs&nbsp;review |                                                                                                                                                                                                                                                                    |
-| [aria-progressbar-name](https://dequeuniversity.com/rules/axe/4.7/aria-progressbar-name?application=RuleDescription)             | Ensures every ARIA progressbar node has an accessible name                                                                                            | Serious                  | cat.aria, wcag2a, wcag111                                                                      | failure, needs&nbsp;review |                                                                                                                                                                                                                                                                    |
-| [aria-required-attr](https://dequeuniversity.com/rules/axe/4.7/aria-required-attr?application=RuleDescription)                   | Ensures elements with ARIA roles have all required ARIA attributes                                                                                    | Critical                 | cat.aria, wcag2a, wcag412                                                                      | failure                    | [4e8ab6](https://act-rules.github.io/rules/4e8ab6)                                                                                                                                                                                                                 |
-| [aria-required-children](https://dequeuniversity.com/rules/axe/4.7/aria-required-children?application=RuleDescription)           | Ensures elements with an ARIA role that require child roles contain them                                                                              | Critical                 | cat.aria, wcag2a, wcag131                                                                      | failure, needs&nbsp;review | [bc4a75](https://act-rules.github.io/rules/bc4a75), [ff89c9](https://act-rules.github.io/rules/ff89c9)                                                                                                                                                             |
-| [aria-required-parent](https://dequeuniversity.com/rules/axe/4.7/aria-required-parent?application=RuleDescription)               | Ensures elements with an ARIA role that require parent roles are contained by them                                                                    | Critical                 | cat.aria, wcag2a, wcag131                                                                      | failure                    | [ff89c9](https://act-rules.github.io/rules/ff89c9)                                                                                                                                                                                                                 |
-| [aria-roles](https://dequeuniversity.com/rules/axe/4.7/aria-roles?application=RuleDescription)                                   | Ensures all elements with a role attribute use a valid value                                                                                          | Minor, Serious, Critical | cat.aria, wcag2a, wcag412                                                                      | failure                    | [674b10](https://act-rules.github.io/rules/674b10)                                                                                                                                                                                                                 |
-| [aria-toggle-field-name](https://dequeuniversity.com/rules/axe/4.7/aria-toggle-field-name?application=RuleDescription)           | Ensures every ARIA toggle field has an accessible name                                                                                                | Moderate, Serious        | cat.aria, wcag2a, wcag412, ACT, TTv5, TT5.c                                                    | failure, needs&nbsp;review | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
-| [aria-tooltip-name](https://dequeuniversity.com/rules/axe/4.7/aria-tooltip-name?application=RuleDescription)                     | Ensures every ARIA tooltip node has an accessible name                                                                                                | Serious                  | cat.aria, wcag2a, wcag412                                                                      | failure, needs&nbsp;review |                                                                                                                                                                                                                                                                    |
-| [aria-valid-attr-value](https://dequeuniversity.com/rules/axe/4.7/aria-valid-attr-value?application=RuleDescription)             | Ensures all ARIA attributes have valid values                                                                                                         | Serious, Critical        | cat.aria, wcag2a, wcag412                                                                      | failure, needs&nbsp;review | [6a7281](https://act-rules.github.io/rules/6a7281)                                                                                                                                                                                                                 |
-| [aria-valid-attr](https://dequeuniversity.com/rules/axe/4.7/aria-valid-attr?application=RuleDescription)                         | Ensures attributes that begin with aria- are valid ARIA attributes                                                                                    | Critical                 | cat.aria, wcag2a, wcag412                                                                      | failure                    | [5f99a7](https://act-rules.github.io/rules/5f99a7)                                                                                                                                                                                                                 |
-| [blink](https://dequeuniversity.com/rules/axe/4.7/blink?application=RuleDescription)                                             | Ensures &lt;blink&gt; elements are not used                                                                                                           | Serious                  | cat.time-and-media, wcag2a, wcag222, section508, section508.22.j, TTv5, TT2.b                  | failure                    |                                                                                                                                                                                                                                                                    |
-| [button-name](https://dequeuniversity.com/rules/axe/4.7/button-name?application=RuleDescription)                                 | Ensures buttons have discernible text                                                                                                                 | Critical                 | cat.name-role-value, wcag2a, wcag412, section508, section508.22.a, ACT, TTv5, TT6.a            | failure, needs&nbsp;review | [97a4e1](https://act-rules.github.io/rules/97a4e1), [m6b1q3](https://act-rules.github.io/rules/m6b1q3)                                                                                                                                                             |
-| [bypass](https://dequeuniversity.com/rules/axe/4.7/bypass?application=RuleDescription)                                           | Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content                                         | Serious                  | cat.keyboard, wcag2a, wcag241, section508, section508.22.o, TTv5, TT9.a                        | needs&nbsp;review          | [cf77f2](https://act-rules.github.io/rules/cf77f2), [047fe0](https://act-rules.github.io/rules/047fe0), [b40fd1](https://act-rules.github.io/rules/b40fd1), [3e12e1](https://act-rules.github.io/rules/3e12e1), [ye5d6e](https://act-rules.github.io/rules/ye5d6e) |
-| [color-contrast](https://dequeuniversity.com/rules/axe/4.7/color-contrast?application=RuleDescription)                           | Ensures the contrast between foreground and background colors meets WCAG 2 AA minimum contrast ratio thresholds                                       | Serious                  | cat.color, wcag2aa, wcag143, ACT, TTv5, TT13.c                                                 | failure, needs&nbsp;review | [afw4f7](https://act-rules.github.io/rules/afw4f7), [09o5cg](https://act-rules.github.io/rules/09o5cg)                                                                                                                                                             |
-| [definition-list](https://dequeuniversity.com/rules/axe/4.7/definition-list?application=RuleDescription)                         | Ensures &lt;dl&gt; elements are structured correctly                                                                                                  | Serious                  | cat.structure, wcag2a, wcag131                                                                 | failure                    |                                                                                                                                                                                                                                                                    |
-| [dlitem](https://dequeuniversity.com/rules/axe/4.7/dlitem?application=RuleDescription)                                           | Ensures &lt;dt&gt; and &lt;dd&gt; elements are contained by a &lt;dl&gt;                                                                              | Serious                  | cat.structure, wcag2a, wcag131                                                                 | failure                    |                                                                                                                                                                                                                                                                    |
-| [document-title](https://dequeuniversity.com/rules/axe/4.7/document-title?application=RuleDescription)                           | Ensures each HTML document contains a non-empty &lt;title&gt; element                                                                                 | Serious                  | cat.text-alternatives, wcag2a, wcag242, ACT, TTv5, TT12.a                                      | failure                    | [2779a5](https://act-rules.github.io/rules/2779a5)                                                                                                                                                                                                                 |
-| [duplicate-id-active](https://dequeuniversity.com/rules/axe/4.7/duplicate-id-active?application=RuleDescription)                 | Ensures every id attribute value of active elements is unique                                                                                         | Serious                  | cat.parsing, wcag2a, wcag411                                                                   | failure                    | [3ea0c8](https://act-rules.github.io/rules/3ea0c8)                                                                                                                                                                                                                 |
-| [duplicate-id-aria](https://dequeuniversity.com/rules/axe/4.7/duplicate-id-aria?application=RuleDescription)                     | Ensures every id attribute value used in ARIA and in labels is unique                                                                                 | Critical                 | cat.parsing, wcag2a, wcag411                                                                   | failure                    | [3ea0c8](https://act-rules.github.io/rules/3ea0c8)                                                                                                                                                                                                                 |
-| [duplicate-id](https://dequeuniversity.com/rules/axe/4.7/duplicate-id?application=RuleDescription)                               | Ensures every id attribute value is unique                                                                                                            | Minor                    | cat.parsing, wcag2a, wcag411                                                                   | failure                    | [3ea0c8](https://act-rules.github.io/rules/3ea0c8)                                                                                                                                                                                                                 |
-| [form-field-multiple-labels](https://dequeuniversity.com/rules/axe/4.7/form-field-multiple-labels?application=RuleDescription)   | Ensures form field does not have multiple label elements                                                                                              | Moderate                 | cat.forms, wcag2a, wcag332, TTv5, TT5.c                                                        | needs&nbsp;review          |                                                                                                                                                                                                                                                                    |
-| [frame-focusable-content](https://dequeuniversity.com/rules/axe/4.7/frame-focusable-content?application=RuleDescription)         | Ensures &lt;frame&gt; and &lt;iframe&gt; elements with focusable content do not have tabindex=-1                                                      | Serious                  | cat.keyboard, wcag2a, wcag211, TTv5, TT4.a                                                     | failure, needs&nbsp;review | [akn7bn](https://act-rules.github.io/rules/akn7bn)                                                                                                                                                                                                                 |
-| [frame-title-unique](https://dequeuniversity.com/rules/axe/4.7/frame-title-unique?application=RuleDescription)                   | Ensures &lt;iframe&gt; and &lt;frame&gt; elements contain a unique title attribute                                                                    | Serious                  | cat.text-alternatives, wcag412, wcag2a, TTv5, TT12.c                                           | needs&nbsp;review          | [4b1c6c](https://act-rules.github.io/rules/4b1c6c)                                                                                                                                                                                                                 |
-| [frame-title](https://dequeuniversity.com/rules/axe/4.7/frame-title?application=RuleDescription)                                 | Ensures &lt;iframe&gt; and &lt;frame&gt; elements have an accessible name                                                                             | Serious                  | cat.text-alternatives, wcag2a, wcag412, section508, section508.22.i, TTv5, TT12.c              | failure, needs&nbsp;review | [cae760](https://act-rules.github.io/rules/cae760)                                                                                                                                                                                                                 |
-| [html-has-lang](https://dequeuniversity.com/rules/axe/4.7/html-has-lang?application=RuleDescription)                             | Ensures every HTML document has a lang attribute                                                                                                      | Serious                  | cat.language, wcag2a, wcag311, ACT, TTv5, TT11.a                                               | failure                    | [b5c3f8](https://act-rules.github.io/rules/b5c3f8)                                                                                                                                                                                                                 |
-| [html-lang-valid](https://dequeuniversity.com/rules/axe/4.7/html-lang-valid?application=RuleDescription)                         | Ensures the lang attribute of the &lt;html&gt; element has a valid value                                                                              | Serious                  | cat.language, wcag2a, wcag311, ACT, TTv5, TT11.a                                               | failure                    | [bf051a](https://act-rules.github.io/rules/bf051a)                                                                                                                                                                                                                 |
-| [html-xml-lang-mismatch](https://dequeuniversity.com/rules/axe/4.7/html-xml-lang-mismatch?application=RuleDescription)           | Ensure that HTML elements with both valid lang and xml:lang attributes agree on the base language of the page                                         | Moderate                 | cat.language, wcag2a, wcag311, ACT                                                             | failure                    | [5b7ae0](https://act-rules.github.io/rules/5b7ae0)                                                                                                                                                                                                                 |
-| [image-alt](https://dequeuniversity.com/rules/axe/4.7/image-alt?application=RuleDescription)                                     | Ensures &lt;img&gt; elements have alternate text or a role of none or presentation                                                                    | Critical                 | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a, ACT, TTv5, TT7.a, TT7.b   | failure, needs&nbsp;review | [23a2a8](https://act-rules.github.io/rules/23a2a8)                                                                                                                                                                                                                 |
-| [input-button-name](https://dequeuniversity.com/rules/axe/4.7/input-button-name?application=RuleDescription)                     | Ensures input buttons have discernible text                                                                                                           | Critical                 | cat.name-role-value, wcag2a, wcag412, section508, section508.22.a, ACT, TTv5, TT5.c            | failure, needs&nbsp;review | [97a4e1](https://act-rules.github.io/rules/97a4e1)                                                                                                                                                                                                                 |
-| [input-image-alt](https://dequeuniversity.com/rules/axe/4.7/input-image-alt?application=RuleDescription)                         | Ensures &lt;input type=&quot;image&quot;&gt; elements have alternate text                                                                             | Critical                 | cat.text-alternatives, wcag2a, wcag111, wcag412, section508, section508.22.a, ACT, TTv5, TT7.a | failure, needs&nbsp;review | [59796f](https://act-rules.github.io/rules/59796f)                                                                                                                                                                                                                 |
-| [label](https://dequeuniversity.com/rules/axe/4.7/label?application=RuleDescription)                                             | Ensures every form element has a label                                                                                                                | Minor, Critical          | cat.forms, wcag2a, wcag412, section508, section508.22.n, ACT, TTv5, TT5.c                      | failure, needs&nbsp;review | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
-| [link-in-text-block](https://dequeuniversity.com/rules/axe/4.7/link-in-text-block?application=RuleDescription)                   | Ensure links are distinguished from surrounding text in a way that does not rely on color                                                             | Serious                  | cat.color, wcag2a, wcag141, TTv5, TT13.a                                                       | failure, needs&nbsp;review |                                                                                                                                                                                                                                                                    |
-| [link-name](https://dequeuniversity.com/rules/axe/4.7/link-name?application=RuleDescription)                                     | Ensures links have discernible text                                                                                                                   | Serious                  | cat.name-role-value, wcag2a, wcag412, wcag244, section508, section508.22.a, ACT, TTv5, TT6.a   | failure, needs&nbsp;review | [c487ae](https://act-rules.github.io/rules/c487ae)                                                                                                                                                                                                                 |
-| [list](https://dequeuniversity.com/rules/axe/4.7/list?application=RuleDescription)                                               | Ensures that lists are structured correctly                                                                                                           | Serious                  | cat.structure, wcag2a, wcag131                                                                 | failure                    |                                                                                                                                                                                                                                                                    |
-| [listitem](https://dequeuniversity.com/rules/axe/4.7/listitem?application=RuleDescription)                                       | Ensures &lt;li&gt; elements are used semantically                                                                                                     | Serious                  | cat.structure, wcag2a, wcag131                                                                 | failure                    |                                                                                                                                                                                                                                                                    |
-| [marquee](https://dequeuniversity.com/rules/axe/4.7/marquee?application=RuleDescription)                                         | Ensures &lt;marquee&gt; elements are not used                                                                                                         | Serious                  | cat.parsing, wcag2a, wcag222, TTv5, TT2.b                                                      | failure                    |                                                                                                                                                                                                                                                                    |
-| [meta-refresh](https://dequeuniversity.com/rules/axe/4.7/meta-refresh?application=RuleDescription)                               | Ensures &lt;meta http-equiv=&quot;refresh&quot;&gt; is not used for delayed refresh                                                                   | Critical                 | cat.time-and-media, wcag2a, wcag221, TTv5, TT2.c                                               | failure                    | [bc659a](https://act-rules.github.io/rules/bc659a), [bisz58](https://act-rules.github.io/rules/bisz58)                                                                                                                                                             |
-| [meta-viewport](https://dequeuniversity.com/rules/axe/4.7/meta-viewport?application=RuleDescription)                             | Ensures &lt;meta name=&quot;viewport&quot;&gt; does not disable text scaling and zooming                                                              | Critical                 | cat.sensory-and-visual-cues, wcag2aa, wcag144, ACT                                             | failure                    | [b4f0c3](https://act-rules.github.io/rules/b4f0c3)                                                                                                                                                                                                                 |
-| [nested-interactive](https://dequeuniversity.com/rules/axe/4.7/nested-interactive?application=RuleDescription)                   | Ensures interactive controls are not nested as they are not always announced by screen readers or can cause focus problems for assistive technologies | Serious                  | cat.keyboard, wcag2a, wcag412, TTv5, TT4.a                                                     | failure, needs&nbsp;review | [307n5z](https://act-rules.github.io/rules/307n5z)                                                                                                                                                                                                                 |
-| [no-autoplay-audio](https://dequeuniversity.com/rules/axe/4.7/no-autoplay-audio?application=RuleDescription)                     | Ensures &lt;video&gt; or &lt;audio&gt; elements do not autoplay audio for more than 3 seconds without a control mechanism to stop or mute the audio   | Moderate                 | cat.time-and-media, wcag2a, wcag142, ACT, TTv5, TT2.a                                          | needs&nbsp;review          | [80f0bf](https://act-rules.github.io/rules/80f0bf)                                                                                                                                                                                                                 |
-| [object-alt](https://dequeuniversity.com/rules/axe/4.7/object-alt?application=RuleDescription)                                   | Ensures &lt;object&gt; elements have alternate text                                                                                                   | Serious                  | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a                            | failure, needs&nbsp;review | [8fc3b6](https://act-rules.github.io/rules/8fc3b6)                                                                                                                                                                                                                 |
-| [role-img-alt](https://dequeuniversity.com/rules/axe/4.7/role-img-alt?application=RuleDescription)                               | Ensures [role=&apos;img&apos;] elements have alternate text                                                                                           | Serious                  | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a, ACT, TTv5, TT7.a          | failure, needs&nbsp;review | [23a2a8](https://act-rules.github.io/rules/23a2a8)                                                                                                                                                                                                                 |
-| [scrollable-region-focusable](https://dequeuniversity.com/rules/axe/4.7/scrollable-region-focusable?application=RuleDescription) | Ensure elements that have scrollable content are accessible by keyboard                                                                               | Serious                  | cat.keyboard, wcag2a, wcag211                                                                  | failure                    | [0ssw9k](https://act-rules.github.io/rules/0ssw9k)                                                                                                                                                                                                                 |
-| [select-name](https://dequeuniversity.com/rules/axe/4.7/select-name?application=RuleDescription)                                 | Ensures select element has an accessible name                                                                                                         | Minor, Critical          | cat.forms, wcag2a, wcag412, section508, section508.22.n, ACT, TTv5, TT5.c                      | failure, needs&nbsp;review | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
-| [server-side-image-map](https://dequeuniversity.com/rules/axe/4.7/server-side-image-map?application=RuleDescription)             | Ensures that server-side image maps are not used                                                                                                      | Minor                    | cat.text-alternatives, wcag2a, wcag211, section508, section508.22.f                            | needs&nbsp;review          |                                                                                                                                                                                                                                                                    |
-| [svg-img-alt](https://dequeuniversity.com/rules/axe/4.7/svg-img-alt?application=RuleDescription)                                 | Ensures &lt;svg&gt; elements with an img, graphics-document or graphics-symbol role have an accessible text                                           | Serious                  | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a, ACT, TTv5, TT7.a          | failure, needs&nbsp;review | [7d6734](https://act-rules.github.io/rules/7d6734)                                                                                                                                                                                                                 |
-| [td-headers-attr](https://dequeuniversity.com/rules/axe/4.7/td-headers-attr?application=RuleDescription)                         | Ensure that each cell in a table that uses the headers attribute refers only to other cells in that table                                             | Serious                  | cat.tables, wcag2a, wcag131, section508, section508.22.g                                       | failure, needs&nbsp;review | [a25f45](https://act-rules.github.io/rules/a25f45)                                                                                                                                                                                                                 |
-| [th-has-data-cells](https://dequeuniversity.com/rules/axe/4.7/th-has-data-cells?application=RuleDescription)                     | Ensure that &lt;th&gt; elements and elements with role=columnheader/rowheader have data cells they describe                                           | Serious                  | cat.tables, wcag2a, wcag131, section508, section508.22.g, TTv5, 14.b                           | failure, needs&nbsp;review | [d0f69e](https://act-rules.github.io/rules/d0f69e)                                                                                                                                                                                                                 |
-| [valid-lang](https://dequeuniversity.com/rules/axe/4.7/valid-lang?application=RuleDescription)                                   | Ensures lang attributes have valid values                                                                                                             | Serious                  | cat.language, wcag2aa, wcag312, ACT, TTv5, TT11.b                                              | failure                    | [de46e4](https://act-rules.github.io/rules/de46e4)                                                                                                                                                                                                                 |
-| [video-caption](https://dequeuniversity.com/rules/axe/4.7/video-caption?application=RuleDescription)                             | Ensures &lt;video&gt; elements have captions                                                                                                          | Critical                 | cat.text-alternatives, wcag2a, wcag122, section508, section508.22.a, TTv5, TT17.a              | needs&nbsp;review          | [eac66b](https://act-rules.github.io/rules/eac66b)                                                                                                                                                                                                                 |
+| Rule ID | Description                                                                                    | Impact | Tags                                                                                                                                                                                                                                                               | Issue Type | ACT Rules |
+| :------ | :--------------------------------------------------------------------------------------------- | :----- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :--------- | :-------- |
+|         | cat.text-alternatives, wcag2a, wcag244, wcag412, section508, section508.22.a, ACT, TTv5, TT6.a |        | [c487ae](https://act-rules.github.io/rules/c487ae)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412                                                                      |        | [5c01ea](https://act-rules.github.io/rules/5c01ea)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412, ACT, TTv5, TT6.a                                                    |        | [97a4e1](https://act-rules.github.io/rules/97a4e1)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412                                                                      |        |                                                                                                                                                                                                                                                                    |
+|         | cat.name-role-value, wcag2a, wcag412                                                           |        | [6cfa84](https://act-rules.github.io/rules/6cfa84)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412, ACT, TTv5, TT5.c                                                    |        | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag111                                                                      |        |                                                                                                                                                                                                                                                                    |
+|         | cat.aria, wcag2a, wcag111                                                                      |        |                                                                                                                                                                                                                                                                    |
+|         | cat.aria, wcag2a, wcag412                                                                      |        | [4e8ab6](https://act-rules.github.io/rules/4e8ab6)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag131                                                                      |        | [bc4a75](https://act-rules.github.io/rules/bc4a75), [ff89c9](https://act-rules.github.io/rules/ff89c9)                                                                                                                                                             |
+|         | cat.aria, wcag2a, wcag131                                                                      |        | [ff89c9](https://act-rules.github.io/rules/ff89c9)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412                                                                      |        | [674b10](https://act-rules.github.io/rules/674b10)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412, ACT, TTv5, TT5.c                                                    |        | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412                                                                      |        |                                                                                                                                                                                                                                                                    |
+|         | cat.aria, wcag2a, wcag412                                                                      |        | [6a7281](https://act-rules.github.io/rules/6a7281)                                                                                                                                                                                                                 |
+|         | cat.aria, wcag2a, wcag412                                                                      |        | [5f99a7](https://act-rules.github.io/rules/5f99a7)                                                                                                                                                                                                                 |
+|         | cat.time-and-media, wcag2a, wcag222, section508, section508.22.j, TTv5, TT2.b                  |        |                                                                                                                                                                                                                                                                    |
+|         | cat.name-role-value, wcag2a, wcag412, section508, section508.22.a, ACT, TTv5, TT6.a            |        | [97a4e1](https://act-rules.github.io/rules/97a4e1), [m6b1q3](https://act-rules.github.io/rules/m6b1q3)                                                                                                                                                             |
+|         | cat.keyboard, wcag2a, wcag241, section508, section508.22.o, TTv5, TT9.a                        |        | [cf77f2](https://act-rules.github.io/rules/cf77f2), [047fe0](https://act-rules.github.io/rules/047fe0), [b40fd1](https://act-rules.github.io/rules/b40fd1), [3e12e1](https://act-rules.github.io/rules/3e12e1), [ye5d6e](https://act-rules.github.io/rules/ye5d6e) |
+|         | cat.color, wcag2aa, wcag143, ACT, TTv5, TT13.c                                                 |        | [afw4f7](https://act-rules.github.io/rules/afw4f7), [09o5cg](https://act-rules.github.io/rules/09o5cg)                                                                                                                                                             |
+|         | cat.structure, wcag2a, wcag131                                                                 |        |                                                                                                                                                                                                                                                                    |
+|         | cat.structure, wcag2a, wcag131                                                                 |        |                                                                                                                                                                                                                                                                    |
+|         | cat.text-alternatives, wcag2a, wcag242, ACT, TTv5, TT12.a                                      |        | [2779a5](https://act-rules.github.io/rules/2779a5)                                                                                                                                                                                                                 |
+|         | cat.parsing, wcag2a, wcag411                                                                   |        | [3ea0c8](https://act-rules.github.io/rules/3ea0c8)                                                                                                                                                                                                                 |
+|         | cat.parsing, wcag2a, wcag411                                                                   |        | [3ea0c8](https://act-rules.github.io/rules/3ea0c8)                                                                                                                                                                                                                 |
+|         | cat.parsing, wcag2a, wcag411                                                                   |        | [3ea0c8](https://act-rules.github.io/rules/3ea0c8)                                                                                                                                                                                                                 |
+|         | cat.forms, wcag2a, wcag332, TTv5, TT5.c                                                        |        |                                                                                                                                                                                                                                                                    |
+|         | cat.keyboard, wcag2a, wcag211, TTv5, TT4.a                                                     |        | [akn7bn](https://act-rules.github.io/rules/akn7bn)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag412, wcag2a, TTv5, TT12.c                                           |        | [4b1c6c](https://act-rules.github.io/rules/4b1c6c)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag412, section508, section508.22.i, TTv5, TT12.c              |        | [cae760](https://act-rules.github.io/rules/cae760)                                                                                                                                                                                                                 |
+|         | cat.language, wcag2a, wcag311, ACT, TTv5, TT11.a                                               |        | [b5c3f8](https://act-rules.github.io/rules/b5c3f8)                                                                                                                                                                                                                 |
+|         | cat.language, wcag2a, wcag311, ACT, TTv5, TT11.a                                               |        | [bf051a](https://act-rules.github.io/rules/bf051a)                                                                                                                                                                                                                 |
+|         | cat.language, wcag2a, wcag311, ACT                                                             |        | [5b7ae0](https://act-rules.github.io/rules/5b7ae0)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a, ACT, TTv5, TT7.a, TT7.b   |        | [23a2a8](https://act-rules.github.io/rules/23a2a8)                                                                                                                                                                                                                 |
+|         | cat.name-role-value, wcag2a, wcag412, section508, section508.22.a, ACT, TTv5, TT5.c            |        | [97a4e1](https://act-rules.github.io/rules/97a4e1)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag111, wcag412, section508, section508.22.a, ACT, TTv5, TT7.a |        | [59796f](https://act-rules.github.io/rules/59796f)                                                                                                                                                                                                                 |
+|         | cat.forms, wcag2a, wcag412, section508, section508.22.n, ACT, TTv5, TT5.c                      |        | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
+|         | cat.color, wcag2a, wcag141, TTv5, TT13.a                                                       |        |                                                                                                                                                                                                                                                                    |
+|         | cat.name-role-value, wcag2a, wcag412, wcag244, section508, section508.22.a, ACT, TTv5, TT6.a   |        | [c487ae](https://act-rules.github.io/rules/c487ae)                                                                                                                                                                                                                 |
+|         | cat.structure, wcag2a, wcag131                                                                 |        |                                                                                                                                                                                                                                                                    |
+|         | cat.structure, wcag2a, wcag131                                                                 |        |                                                                                                                                                                                                                                                                    |
+|         | cat.parsing, wcag2a, wcag222, TTv5, TT2.b                                                      |        |                                                                                                                                                                                                                                                                    |
+|         | cat.time-and-media, wcag2a, wcag221, TTv5, TT2.c                                               |        | [bc659a](https://act-rules.github.io/rules/bc659a), [bisz58](https://act-rules.github.io/rules/bisz58)                                                                                                                                                             |
+|         | cat.sensory-and-visual-cues, wcag2aa, wcag144, ACT                                             |        | [b4f0c3](https://act-rules.github.io/rules/b4f0c3)                                                                                                                                                                                                                 |
+|         | cat.keyboard, wcag2a, wcag412, TTv5, TT4.a                                                     |        | [307n5z](https://act-rules.github.io/rules/307n5z)                                                                                                                                                                                                                 |
+|         | cat.time-and-media, wcag2a, wcag142, ACT, TTv5, TT2.a                                          |        | [80f0bf](https://act-rules.github.io/rules/80f0bf)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a                            |        | [8fc3b6](https://act-rules.github.io/rules/8fc3b6)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a, ACT, TTv5, TT7.a          |        | [23a2a8](https://act-rules.github.io/rules/23a2a8)                                                                                                                                                                                                                 |
+|         | cat.keyboard, wcag2a, wcag211                                                                  |        | [0ssw9k](https://act-rules.github.io/rules/0ssw9k)                                                                                                                                                                                                                 |
+|         | cat.forms, wcag2a, wcag412, section508, section508.22.n, ACT, TTv5, TT5.c                      |        | [e086e5](https://act-rules.github.io/rules/e086e5)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag211, section508, section508.22.f                            |        |                                                                                                                                                                                                                                                                    |
+|         | cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a, ACT, TTv5, TT7.a          |        | [7d6734](https://act-rules.github.io/rules/7d6734)                                                                                                                                                                                                                 |
+|         | cat.tables, wcag2a, wcag131, section508, section508.22.g                                       |        | [a25f45](https://act-rules.github.io/rules/a25f45)                                                                                                                                                                                                                 |
+|         | cat.tables, wcag2a, wcag131, section508, section508.22.g, TTv5, 14.b                           |        | [d0f69e](https://act-rules.github.io/rules/d0f69e)                                                                                                                                                                                                                 |
+|         | cat.language, wcag2aa, wcag312, ACT, TTv5, TT11.b                                              |        | [de46e4](https://act-rules.github.io/rules/de46e4)                                                                                                                                                                                                                 |
+|         | cat.text-alternatives, wcag2a, wcag122, section508, section508.22.a, TTv5, TT17.a              |        | [eac66b](https://act-rules.github.io/rules/eac66b)                                                                                                                                                                                                                 |
 
 ## WCAG 2.1 Level A & AA Rules
 
-| Rule ID                                                                                                            | Description                                                                                   | Impact  | Tags                                   | Issue Type | ACT Rules                                                                                                                                                  |
-| :----------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------------------- | :------ | :------------------------------------- | :--------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------- |
-| [autocomplete-valid](https://dequeuniversity.com/rules/axe/4.7/autocomplete-valid?application=RuleDescription)     | Ensure the autocomplete attribute is correct and suitable for the form field                  | Serious | cat.forms, wcag21aa, wcag135, ACT      | failure    | [73f2c2](https://act-rules.github.io/rules/73f2c2)                                                                                                         |
-| [avoid-inline-spacing](https://dequeuniversity.com/rules/axe/4.7/avoid-inline-spacing?application=RuleDescription) | Ensure that text spacing set through style attributes can be adjusted with custom stylesheets | Serious | cat.structure, wcag21aa, wcag1412, ACT | failure    | [24afc2](https://act-rules.github.io/rules/24afc2), [9e45ec](https://act-rules.github.io/rules/9e45ec), [78fd32](https://act-rules.github.io/rules/78fd32) |
+| Rule ID | Description                            | Impact | Tags                                                                                                                                                       | Issue Type | ACT Rules |
+| :------ | :------------------------------------- | :----- | :--------------------------------------------------------------------------------------------------------------------------------------------------------- | :--------- | :-------- |
+|         | cat.forms, wcag21aa, wcag135, ACT      |        | [73f2c2](https://act-rules.github.io/rules/73f2c2)                                                                                                         |
+|         | cat.structure, wcag21aa, wcag1412, ACT |        | [24afc2](https://act-rules.github.io/rules/24afc2), [9e45ec](https://act-rules.github.io/rules/9e45ec), [78fd32](https://act-rules.github.io/rules/78fd32) |
 
 ## WCAG 2.2 Level A & AA Rules
 
 These rules are disabled by default, until WCAG 2.2 is more widely adopted and required.
 
-| Rule ID                                                                                          | Description                                        | Impact  | Tags                                           | Issue Type                 | ACT Rules |
-| :----------------------------------------------------------------------------------------------- | :------------------------------------------------- | :------ | :--------------------------------------------- | :------------------------- | :-------- |
-| [target-size](https://dequeuniversity.com/rules/axe/4.7/target-size?application=RuleDescription) | Ensure touch target have sufficient size and space | Serious | wcag22aa, wcag258, cat.sensory-and-visual-cues | failure, needs&nbsp;review |           |
+| Rule ID | Description                                    | Impact | Tags | Issue Type | ACT Rules |
+| :------ | :--------------------------------------------- | :----- | :--- | :--------- | :-------- |
+|         | wcag22aa, wcag258, cat.sensory-and-visual-cues |        |      |
 
 ## Best Practices Rules
 
 Rules that do not necessarily conform to WCAG success criterion but are industry accepted practices that improve the user experience.
 
-| Rule ID                                                                                                                                          | Description                                                                                                                                    | Impact             | Tags                                       | Issue Type                 | ACT Rules                                          |
-| :----------------------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------- | :----------------- | :----------------------------------------- | :------------------------- | :------------------------------------------------- |
-| [accesskeys](https://dequeuniversity.com/rules/axe/4.7/accesskeys?application=RuleDescription)                                                   | Ensures every accesskey attribute value is unique                                                                                              | Serious            | cat.keyboard, best-practice                | failure                    |                                                    |
-| [aria-allowed-role](https://dequeuniversity.com/rules/axe/4.7/aria-allowed-role?application=RuleDescription)                                     | Ensures role attribute has an appropriate value for the element                                                                                | Minor              | cat.aria, best-practice                    | failure, needs&nbsp;review |                                                    |
-| [aria-dialog-name](https://dequeuniversity.com/rules/axe/4.7/aria-dialog-name?application=RuleDescription)                                       | Ensures every ARIA dialog and alertdialog node has an accessible name                                                                          | Serious            | cat.aria, best-practice                    | failure, needs&nbsp;review |                                                    |
-| [aria-text](https://dequeuniversity.com/rules/axe/4.7/aria-text?application=RuleDescription)                                                     | Ensures &quot;role=text&quot; is used on elements with no focusable descendants                                                                | Serious            | cat.aria, best-practice                    | failure, needs&nbsp;review |                                                    |
-| [aria-treeitem-name](https://dequeuniversity.com/rules/axe/4.7/aria-treeitem-name?application=RuleDescription)                                   | Ensures every ARIA treeitem node has an accessible name                                                                                        | Serious            | cat.aria, best-practice                    | failure, needs&nbsp;review |                                                    |
-| [empty-heading](https://dequeuniversity.com/rules/axe/4.7/empty-heading?application=RuleDescription)                                             | Ensures headings have discernible text                                                                                                         | Minor              | cat.name-role-value, best-practice         | failure, needs&nbsp;review | [ffd0e9](https://act-rules.github.io/rules/ffd0e9) |
-| [empty-table-header](https://dequeuniversity.com/rules/axe/4.7/empty-table-header?application=RuleDescription)                                   | Ensures table headers have discernible text                                                                                                    | Minor              | cat.name-role-value, best-practice         | failure, needs&nbsp;review |                                                    |
-| [frame-tested](https://dequeuniversity.com/rules/axe/4.7/frame-tested?application=RuleDescription)                                               | Ensures &lt;iframe&gt; and &lt;frame&gt; elements contain the axe-core script                                                                  | Critical           | cat.structure, review-item, best-practice  | failure, needs&nbsp;review |                                                    |
-| [heading-order](https://dequeuniversity.com/rules/axe/4.7/heading-order?application=RuleDescription)                                             | Ensures the order of headings is semantically correct                                                                                          | Moderate           | cat.semantics, best-practice               | failure, needs&nbsp;review |                                                    |
-| [image-redundant-alt](https://dequeuniversity.com/rules/axe/4.7/image-redundant-alt?application=RuleDescription)                                 | Ensure image alternative is not repeated as text                                                                                               | Minor              | cat.text-alternatives, best-practice       | failure                    |                                                    |
-| [label-title-only](https://dequeuniversity.com/rules/axe/4.7/label-title-only?application=RuleDescription)                                       | Ensures that every form element has a visible label and is not solely labeled using hidden labels, or the title or aria-describedby attributes | Serious            | cat.forms, best-practice                   | failure                    |                                                    |
-| [landmark-banner-is-top-level](https://dequeuniversity.com/rules/axe/4.7/landmark-banner-is-top-level?application=RuleDescription)               | Ensures the banner landmark is at top level                                                                                                    | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-complementary-is-top-level](https://dequeuniversity.com/rules/axe/4.7/landmark-complementary-is-top-level?application=RuleDescription) | Ensures the complementary landmark or aside is at top level                                                                                    | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-contentinfo-is-top-level](https://dequeuniversity.com/rules/axe/4.7/landmark-contentinfo-is-top-level?application=RuleDescription)     | Ensures the contentinfo landmark is at top level                                                                                               | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-main-is-top-level](https://dequeuniversity.com/rules/axe/4.7/landmark-main-is-top-level?application=RuleDescription)                   | Ensures the main landmark is at top level                                                                                                      | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-no-duplicate-banner](https://dequeuniversity.com/rules/axe/4.7/landmark-no-duplicate-banner?application=RuleDescription)               | Ensures the document has at most one banner landmark                                                                                           | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-no-duplicate-contentinfo](https://dequeuniversity.com/rules/axe/4.7/landmark-no-duplicate-contentinfo?application=RuleDescription)     | Ensures the document has at most one contentinfo landmark                                                                                      | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-no-duplicate-main](https://dequeuniversity.com/rules/axe/4.7/landmark-no-duplicate-main?application=RuleDescription)                   | Ensures the document has at most one main landmark                                                                                             | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-one-main](https://dequeuniversity.com/rules/axe/4.7/landmark-one-main?application=RuleDescription)                                     | Ensures the document has a main landmark                                                                                                       | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [landmark-unique](https://dequeuniversity.com/rules/axe/4.7/landmark-unique?application=RuleDescription)                                         | Landmarks should have a unique role or role/label/title (i.e. accessible name) combination                                                     | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [meta-viewport-large](https://dequeuniversity.com/rules/axe/4.7/meta-viewport-large?application=RuleDescription)                                 | Ensures &lt;meta name=&quot;viewport&quot;&gt; can scale a significant amount                                                                  | Minor              | cat.sensory-and-visual-cues, best-practice | failure                    |                                                    |
-| [page-has-heading-one](https://dequeuniversity.com/rules/axe/4.7/page-has-heading-one?application=RuleDescription)                               | Ensure that the page, or at least one of its frames contains a level-one heading                                                               | Moderate           | cat.semantics, best-practice               | failure                    |                                                    |
-| [presentation-role-conflict](https://dequeuniversity.com/rules/axe/4.7/presentation-role-conflict?application=RuleDescription)                   | Elements marked as presentational should not have global ARIA or tabindex to ensure all screen readers ignore them                             | Minor              | cat.aria, best-practice, ACT               | failure                    | [46ca7f](https://act-rules.github.io/rules/46ca7f) |
-| [region](https://dequeuniversity.com/rules/axe/4.7/region?application=RuleDescription)                                                           | Ensures all page content is contained by landmarks                                                                                             | Moderate           | cat.keyboard, best-practice                | failure                    |                                                    |
-| [scope-attr-valid](https://dequeuniversity.com/rules/axe/4.7/scope-attr-valid?application=RuleDescription)                                       | Ensures the scope attribute is used correctly on tables                                                                                        | Moderate, Critical | cat.tables, best-practice                  | failure                    |                                                    |
-| [skip-link](https://dequeuniversity.com/rules/axe/4.7/skip-link?application=RuleDescription)                                                     | Ensure all skip links have a focusable target                                                                                                  | Moderate           | cat.keyboard, best-practice                | failure, needs&nbsp;review |                                                    |
-| [tabindex](https://dequeuniversity.com/rules/axe/4.7/tabindex?application=RuleDescription)                                                       | Ensures tabindex attribute values are not greater than 0                                                                                       | Serious            | cat.keyboard, best-practice                | failure                    |                                                    |
-| [table-duplicate-name](https://dequeuniversity.com/rules/axe/4.7/table-duplicate-name?application=RuleDescription)                               | Ensure the &lt;caption&gt; element does not contain the same text as the summary attribute                                                     | Minor              | cat.tables, best-practice                  | failure, needs&nbsp;review |                                                    |
+| Rule ID | Description                                | Impact | Tags                                               | Issue Type | ACT Rules |
+| :------ | :----------------------------------------- | :----- | :------------------------------------------------- | :--------- | :-------- |
+|         | cat.keyboard, best-practice                |        |                                                    |
+|         | cat.aria, best-practice                    |        |                                                    |
+|         | cat.aria, best-practice                    |        |                                                    |
+|         | cat.aria, best-practice                    |        |                                                    |
+|         | cat.aria, best-practice                    |        |                                                    |
+| Minor   | cat.name-role-value, best-practice         |        | [ffd0e9](https://act-rules.github.io/rules/ffd0e9) |
+|         | cat.name-role-value, best-practice         |        |                                                    |
+|         | cat.structure, review-item, best-practice  |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.text-alternatives, best-practice       |        |                                                    |
+|         | cat.forms, best-practice                   |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.sensory-and-visual-cues, best-practice |        |                                                    |
+|         | cat.semantics, best-practice               |        |                                                    |
+|         | cat.aria, best-practice, ACT               |        | [46ca7f](https://act-rules.github.io/rules/46ca7f) |
+|         | cat.keyboard, best-practice                |        |                                                    |
+|         | cat.tables, best-practice                  |        |                                                    |
+|         | cat.keyboard, best-practice                |        |                                                    |
+|         | cat.keyboard, best-practice                |        |                                                    |
+|         | cat.tables, best-practice                  |        |                                                    |
 
 ## WCAG 2.x level AAA rules
 
 Rules that check for conformance to WCAG AAA success criteria that can be fully automated. These are disabled by default in axe-core.
 
-| Rule ID                                                                                                                            | Description                                                                                                       | Impact  | Tags                                           | Issue Type                 | ACT Rules                                          |
-| :--------------------------------------------------------------------------------------------------------------------------------- | :---------------------------------------------------------------------------------------------------------------- | :------ | :--------------------------------------------- | :------------------------- | :------------------------------------------------- |
-| [color-contrast-enhanced](https://dequeuniversity.com/rules/axe/4.7/color-contrast-enhanced?application=RuleDescription)           | Ensures the contrast between foreground and background colors meets WCAG 2 AAA enhanced contrast ratio thresholds | Serious | cat.color, wcag2aaa, wcag146, ACT              | failure, needs&nbsp;review | [09o5cg](https://act-rules.github.io/rules/09o5cg) |
-| [identical-links-same-purpose](https://dequeuniversity.com/rules/axe/4.7/identical-links-same-purpose?application=RuleDescription) | Ensure that links with the same accessible name serve a similar purpose                                           | Minor   | cat.semantics, wcag2aaa, wcag249               | needs&nbsp;review          | [b20e66](https://act-rules.github.io/rules/b20e66) |
-| [meta-refresh-no-exceptions](https://dequeuniversity.com/rules/axe/4.7/meta-refresh-no-exceptions?application=RuleDescription)     | Ensures &lt;meta http-equiv=&quot;refresh&quot;&gt; is not used for delayed refresh                               | Minor   | cat.time-and-media, wcag2aaa, wcag224, wcag325 | failure                    | [bisz58](https://act-rules.github.io/rules/bisz58) |
+| Rule ID | Description                                    | Impact | Tags                                               | Issue Type | ACT Rules |
+| :------ | :--------------------------------------------- | :----- | :------------------------------------------------- | :--------- | :-------- |
+|         | cat.color, wcag2aaa, wcag146, ACT              |        | [09o5cg](https://act-rules.github.io/rules/09o5cg) |
+|         | cat.semantics, wcag2aaa, wcag249               |        | [b20e66](https://act-rules.github.io/rules/b20e66) |
+|         | cat.time-and-media, wcag2aaa, wcag224, wcag325 |        | [bisz58](https://act-rules.github.io/rules/bisz58) |
 
 ## Experimental Rules
 
 Rules we are still testing and developing. They are disabled by default in axe-core, but are enabled for the axe browser extensions.
 
-| Rule ID                                                                                                                          | Description                                                                                                                | Impact   | Tags                                                                                 | Issue Type                 | ACT Rules                                          |
-| :------------------------------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------- | :------- | :----------------------------------------------------------------------------------- | :------------------------- | :------------------------------------------------- |
-| [css-orientation-lock](https://dequeuniversity.com/rules/axe/4.7/css-orientation-lock?application=RuleDescription)               | Ensures content is not locked to any specific display orientation, and the content is operable in all display orientations | Serious  | cat.structure, wcag134, wcag21aa, experimental                                       | failure, needs&nbsp;review | [b33eff](https://act-rules.github.io/rules/b33eff) |
-| [focus-order-semantics](https://dequeuniversity.com/rules/axe/4.7/focus-order-semantics?application=RuleDescription)             | Ensures elements in the focus order have a role appropriate for interactive content                                        | Minor    | cat.keyboard, best-practice, experimental                                            | failure                    |                                                    |
-| [hidden-content](https://dequeuniversity.com/rules/axe/4.7/hidden-content?application=RuleDescription)                           | Informs users about hidden content.                                                                                        | Minor    | cat.structure, experimental, review-item, best-practice                              | failure, needs&nbsp;review |                                                    |
-| [label-content-name-mismatch](https://dequeuniversity.com/rules/axe/4.7/label-content-name-mismatch?application=RuleDescription) | Ensures that elements labelled through their content must have their visible text as part of their accessible name         | Serious  | cat.semantics, wcag21a, wcag253, experimental                                        | failure                    | [2ee8b8](https://act-rules.github.io/rules/2ee8b8) |
-| [p-as-heading](https://dequeuniversity.com/rules/axe/4.7/p-as-heading?application=RuleDescription)                               | Ensure bold, italic text and font-size is not used to style &lt;p&gt; elements as a heading                                | Serious  | cat.semantics, wcag2a, wcag131, experimental                                         | failure, needs&nbsp;review |                                                    |
-| [table-fake-caption](https://dequeuniversity.com/rules/axe/4.7/table-fake-caption?application=RuleDescription)                   | Ensure that tables with a caption use the &lt;caption&gt; element.                                                         | Serious  | cat.tables, experimental, wcag2a, wcag131, section508, section508.22.g               | failure                    |                                                    |
-| [td-has-header](https://dequeuniversity.com/rules/axe/4.7/td-has-header?application=RuleDescription)                             | Ensure that each non-empty data cell in a &lt;table&gt; larger than 3 by 3 has one or more table headers                   | Critical | cat.tables, experimental, wcag2a, wcag131, section508, section508.22.g, TTv5, TT14.b | failure                    |                                                    |
+| Rule ID | Description                                                                          | Impact | Tags                                               | Issue Type | ACT Rules |
+| :------ | :----------------------------------------------------------------------------------- | :----- | :------------------------------------------------- | :--------- | :-------- |
+|         | cat.structure, wcag134, wcag21aa, experimental                                       |        | [b33eff](https://act-rules.github.io/rules/b33eff) |
+|         | cat.keyboard, best-practice, experimental                                            |        |                                                    |
+|         | cat.structure, experimental, review-item, best-practice                              |        |                                                    |
+|         | cat.semantics, wcag21a, wcag253, experimental                                        |        | [2ee8b8](https://act-rules.github.io/rules/2ee8b8) |
+|         | cat.semantics, wcag2a, wcag131, experimental                                         |        |                                                    |
+|         | cat.tables, experimental, wcag2a, wcag131, section508, section508.22.g               |        |                                                    |
+|         | cat.tables, experimental, wcag2a, wcag131, section508, section508.22.g, TTv5, TT14.b |        |                                                    |
 
 ## Deprecated Rules
 
 Deprecated rules are disabled by default and will be removed in the next major release.
 
-| Rule ID                                                                                                            | Description                                                                            | Impact   | Tags                                                                         | Issue Type                 | ACT Rules                                                                                              |
-| :----------------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------- | :------- | :--------------------------------------------------------------------------- | :------------------------- | :----------------------------------------------------------------------------------------------------- |
-| [aria-roledescription](https://dequeuniversity.com/rules/axe/4.7/aria-roledescription?application=RuleDescription) | Ensure aria-roledescription is only used on elements with an implicit or explicit role | Serious  | cat.aria, wcag2a, wcag412, deprecated                                        | failure, needs&nbsp;review |                                                                                                        |
-| [audio-caption](https://dequeuniversity.com/rules/axe/4.7/audio-caption?application=RuleDescription)               | Ensures &lt;audio&gt; elements have captions                                           | Critical | cat.time-and-media, wcag2a, wcag121, section508, section508.22.a, deprecated | needs&nbsp;review          | [2eb176](https://act-rules.github.io/rules/2eb176), [afb423](https://act-rules.github.io/rules/afb423) |
+| Rule ID | Description                                                                  | Impact | Tags                                                                                                   | Issue Type | ACT Rules |
+| :------ | :--------------------------------------------------------------------------- | :----- | :----------------------------------------------------------------------------------------------------- | :--------- | :-------- |
+|         | cat.aria, wcag2a, wcag412, deprecated                                        |        |                                                                                                        |
+|         | cat.time-and-media, wcag2a, wcag121, section508, section508.22.a, deprecated |        | [2eb176](https://act-rules.github.io/rules/2eb176), [afb423](https://act-rules.github.io/rules/afb423) |
diff --git a/lib/core/base/audit.js b/lib/core/base/audit.js
index b8aee7d4..4656be5c 100644
--- a/lib/core/base/audit.js
+++ b/lib/core/base/audit.js
@@ -354,7 +354,6 @@ class Audit {
       (audit.data && audit.data.failureSummaries) || {};
     this.data.incompleteFallbackMessage =
       (audit.data && audit.data.incompleteFallbackMessage) || '';
-    this._constructHelpUrls(); // create default helpUrls
   }
   /**
    * Adds a new command to the audit
@@ -644,24 +643,6 @@ class Audit {
     ) {
       this.application = branding.application;
     }
-    this._constructHelpUrls(previous);
-  }
-  _constructHelpUrls(previous = null) {
-    // TODO: es-modules-version
-    var version = (axe.version.match(/^[1-9][0-9]*\.[0-9]+/) || ['x.y'])[0];
-    this.rules.forEach(rule => {
-      if (!this.data.rules[rule.id]) {
-        this.data.rules[rule.id] = {};
-      }
-      const metaData = this.data.rules[rule.id];
-      if (
-        typeof metaData.helpUrl !== 'string' ||
-        (previous &&
-          metaData.helpUrl === getHelpUrl(previous, rule.id, version))
-      ) {
-        metaData.helpUrl = getHelpUrl(this, rule.id, version);
-      }
-    });
   }
   /**
    * Reset the default rules, checks and meta data
@@ -761,21 +742,4 @@ function getDefferedRule(rule, context, options) {
   };
 }
 
-/**
- * For all the rules, create the helpUrl and add it to the data for that rule
- */
-function getHelpUrl({ brand, application, lang }, ruleId, version) {
-  return (
-    constants.helpUrlBase +
-    brand +
-    '/' +
-    (version || axe.version.substring(0, axe.version.lastIndexOf('.'))) +
-    '/' +
-    ruleId +
-    '?application=' +
-    encodeURIComponent(application) +
-    (lang && lang !== 'en' ? '&lang=' + encodeURIComponent(lang) : '')
-  );
-}
-
 export default Audit;
diff --git a/lib/core/constants.js b/lib/core/constants.js
index 3880c0a1..b42c4723 100644
--- a/lib/core/constants.js
+++ b/lib/core/constants.js
@@ -26,7 +26,6 @@ const definitions = [
 ];
 
 const constants = {
-  helpUrlBase: 'https://dequeuniversity.com/rules/',
   gridSize: 200,
   results: [],
   resultGroups: [],
diff --git a/lib/core/public/configure.js b/lib/core/public/configure.js
index cbd64248..3bd53f72 100644
--- a/lib/core/public/configure.js
+++ b/lib/core/public/configure.js
@@ -95,8 +95,6 @@ function configure(spec) {
 
   if (typeof spec.branding !== 'undefined') {
     audit.setBranding(spec.branding);
-  } else {
-    audit._constructHelpUrls();
   }
 
   if (spec.tagExclude) {
diff --git a/lib/core/public/get-rules.js b/lib/core/public/get-rules.js
index d52216f7..0aa6065f 100644
--- a/lib/core/public/get-rules.js
+++ b/lib/core/public/get-rules.js
@@ -13,14 +13,9 @@ function getRules(tags) {
         }).length;
       });
 
-  var ruleData = axe._audit.data.rules || {};
   return matchingRules.map(matchingRule => {
-    var rd = ruleData[matchingRule.id] || {};
     return {
       ruleId: matchingRule.id,
-      description: rd.description,
-      help: rd.help,
-      helpUrl: rd.helpUrl,
       tags: matchingRule.tags,
       actIds: matchingRule.actIds
     };
diff --git a/lib/core/utils/get-environment-data.js b/lib/core/utils/get-environment-data.js
index 61c3da73..1c794178 100644
--- a/lib/core/utils/get-environment-data.js
+++ b/lib/core/utils/get-environment-data.js
@@ -10,34 +10,6 @@ export default function getEnvironmentData(metadata = null, win = window) {
   }
 
   return {
-    testEngine: {
-      name: 'axe-core',
-      version: axe.version
-    },
-    testRunner: {
-      name: axe._audit.brand
-    },
-    testEnvironment: getTestEnvironment(win),
-    timestamp: new Date().toISOString(),
     url: win.location?.href
   };
 }
-
-function getTestEnvironment(win) {
-  if (!win.navigator || typeof win.navigator !== 'object') {
-    return {};
-  }
-  const { navigator, innerHeight, innerWidth } = win;
-  const { angle, type } = getOrientation(win) || {};
-  return {
-    userAgent: navigator.userAgent,
-    windowWidth: innerWidth,
-    windowHeight: innerHeight,
-    orientationAngle: angle,
-    orientationType: type
-  };
-}
-
-function getOrientation({ screen }) {
-  return screen.orientation || screen.msOrientation || screen.mozOrientation;
-}
diff --git a/locales/_template.json b/locales/_template.json
index fd028d34..c4ff4925 100644
--- a/locales/_template.json
+++ b/locales/_template.json
@@ -1,1067 +1,7 @@
 {
   "lang": "xyz",
-  "rules": {
-    "accesskeys": {
-      "description": "Ensures every accesskey attribute value is unique",
-      "help": "accesskey attribute value should be unique"
-    },
-    "area-alt": {
-      "description": "Ensures <area> elements of image maps have alternate text",
-      "help": "Active <area> elements must have alternate text"
-    },
-    "aria-allowed-attr": {
-      "description": "Ensures ARIA attributes are allowed for an element's role",
-      "help": "Elements must only use allowed ARIA attributes"
-    },
-    "aria-allowed-role": {
-      "description": "Ensures role attribute has an appropriate value for the element",
-      "help": "ARIA role should be appropriate for the element"
-    },
-    "aria-command-name": {
-      "description": "Ensures every ARIA button, link and menuitem has an accessible name",
-      "help": "ARIA commands must have an accessible name"
-    },
-    "aria-dialog-name": {
-      "description": "Ensures every ARIA dialog and alertdialog node has an accessible name",
-      "help": "ARIA dialog and alertdialog nodes should have an accessible name"
-    },
-    "aria-hidden-body": {
-      "description": "Ensures aria-hidden='true' is not present on the document body.",
-      "help": "aria-hidden='true' must not be present on the document body"
-    },
-    "aria-hidden-focus": {
-      "description": "Ensures aria-hidden elements are not focusable nor contain focusable elements",
-      "help": "ARIA hidden element must not be focusable or contain focusable elements"
-    },
-    "aria-input-field-name": {
-      "description": "Ensures every ARIA input field has an accessible name",
-      "help": "ARIA input fields must have an accessible name"
-    },
-    "aria-meter-name": {
-      "description": "Ensures every ARIA meter node has an accessible name",
-      "help": "ARIA meter nodes must have an accessible name"
-    },
-    "aria-progressbar-name": {
-      "description": "Ensures every ARIA progressbar node has an accessible name",
-      "help": "ARIA progressbar nodes must have an accessible name"
-    },
-    "aria-required-attr": {
-      "description": "Ensures elements with ARIA roles have all required ARIA attributes",
-      "help": "Required ARIA attributes must be provided"
-    },
-    "aria-required-children": {
-      "description": "Ensures elements with an ARIA role that require child roles contain them",
-      "help": "Certain ARIA roles must contain particular children"
-    },
-    "aria-required-parent": {
-      "description": "Ensures elements with an ARIA role that require parent roles are contained by them",
-      "help": "Certain ARIA roles must be contained by particular parents"
-    },
-    "aria-roledescription": {
-      "description": "Ensure aria-roledescription is only used on elements with an implicit or explicit role",
-      "help": "aria-roledescription must be on elements with a semantic role"
-    },
-    "aria-roles": {
-      "description": "Ensures all elements with a role attribute use a valid value",
-      "help": "ARIA roles used must conform to valid values"
-    },
-    "aria-text": {
-      "description": "Ensures \"role=text\" is used on elements with no focusable descendants",
-      "help": "\"role=text\" should have no focusable descendants"
-    },
-    "aria-toggle-field-name": {
-      "description": "Ensures every ARIA toggle field has an accessible name",
-      "help": "ARIA toggle fields must have an accessible name"
-    },
-    "aria-tooltip-name": {
-      "description": "Ensures every ARIA tooltip node has an accessible name",
-      "help": "ARIA tooltip nodes must have an accessible name"
-    },
-    "aria-treeitem-name": {
-      "description": "Ensures every ARIA treeitem node has an accessible name",
-      "help": "ARIA treeitem nodes should have an accessible name"
-    },
-    "aria-valid-attr-value": {
-      "description": "Ensures all ARIA attributes have valid values",
-      "help": "ARIA attributes must conform to valid values"
-    },
-    "aria-valid-attr": {
-      "description": "Ensures attributes that begin with aria- are valid ARIA attributes",
-      "help": "ARIA attributes must conform to valid names"
-    },
-    "audio-caption": {
-      "description": "Ensures <audio> elements have captions",
-      "help": "<audio> elements must have a captions track"
-    },
-    "autocomplete-valid": {
-      "description": "Ensure the autocomplete attribute is correct and suitable for the form field",
-      "help": "autocomplete attribute must be used correctly"
-    },
-    "avoid-inline-spacing": {
-      "description": "Ensure that text spacing set through style attributes can be adjusted with custom stylesheets",
-      "help": "Inline text spacing must be adjustable with custom stylesheets"
-    },
-    "blink": {
-      "description": "Ensures <blink> elements are not used",
-      "help": "<blink> elements are deprecated and must not be used"
-    },
-    "button-name": {
-      "description": "Ensures buttons have discernible text",
-      "help": "Buttons must have discernible text"
-    },
-    "bypass": {
-      "description": "Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content",
-      "help": "Page must have means to bypass repeated blocks"
-    },
-    "color-contrast-enhanced": {
-      "description": "Ensures the contrast between foreground and background colors meets WCAG 2 AAA enhanced contrast ratio thresholds",
-      "help": "Elements must meet enhanced color contrast ratio thresholds"
-    },
-    "color-contrast": {
-      "description": "Ensures the contrast between foreground and background colors meets WCAG 2 AA minimum contrast ratio thresholds",
-      "help": "Elements must meet minimum color contrast ratio thresholds"
-    },
-    "css-orientation-lock": {
-      "description": "Ensures content is not locked to any specific display orientation, and the content is operable in all display orientations",
-      "help": "CSS Media queries must not lock display orientation"
-    },
-    "definition-list": {
-      "description": "Ensures <dl> elements are structured correctly",
-      "help": "<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script>, <template> or <div> elements"
-    },
-    "dlitem": {
-      "description": "Ensures <dt> and <dd> elements are contained by a <dl>",
-      "help": "<dt> and <dd> elements must be contained by a <dl>"
-    },
-    "document-title": {
-      "description": "Ensures each HTML document contains a non-empty <title> element",
-      "help": "Documents must have <title> element to aid in navigation"
-    },
-    "duplicate-id-active": {
-      "description": "Ensures every id attribute value of active elements is unique",
-      "help": "IDs of active elements must be unique"
-    },
-    "duplicate-id-aria": {
-      "description": "Ensures every id attribute value used in ARIA and in labels is unique",
-      "help": "IDs used in ARIA and labels must be unique"
-    },
-    "duplicate-id": {
-      "description": "Ensures every id attribute value is unique",
-      "help": "id attribute value must be unique"
-    },
-    "empty-heading": {
-      "description": "Ensures headings have discernible text",
-      "help": "Headings should not be empty"
-    },
-    "empty-table-header": {
-      "description": "Ensures table headers have discernible text",
-      "help": "Table header text should not be empty"
-    },
-    "focus-order-semantics": {
-      "description": "Ensures elements in the focus order have a role appropriate for interactive content",
-      "help": "Elements in the focus order should have an appropriate role"
-    },
-    "form-field-multiple-labels": {
-      "description": "Ensures form field does not have multiple label elements",
-      "help": "Form field must not have multiple label elements"
-    },
-    "frame-focusable-content": {
-      "description": "Ensures <frame> and <iframe> elements with focusable content do not have tabindex=-1",
-      "help": "Frames with focusable content must not have tabindex=-1"
-    },
-    "frame-tested": {
-      "description": "Ensures <iframe> and <frame> elements contain the axe-core script",
-      "help": "Frames should be tested with axe-core"
-    },
-    "frame-title-unique": {
-      "description": "Ensures <iframe> and <frame> elements contain a unique title attribute",
-      "help": "Frames must have a unique title attribute"
-    },
-    "frame-title": {
-      "description": "Ensures <iframe> and <frame> elements have an accessible name",
-      "help": "Frames must have an accessible name"
-    },
-    "heading-order": {
-      "description": "Ensures the order of headings is semantically correct",
-      "help": "Heading levels should only increase by one"
-    },
-    "hidden-content": {
-      "description": "Informs users about hidden content.",
-      "help": "Hidden content on the page should be analyzed"
-    },
-    "html-has-lang": {
-      "description": "Ensures every HTML document has a lang attribute",
-      "help": "<html> element must have a lang attribute"
-    },
-    "html-lang-valid": {
-      "description": "Ensures the lang attribute of the <html> element has a valid value",
-      "help": "<html> element must have a valid value for the lang attribute"
-    },
-    "html-xml-lang-mismatch": {
-      "description": "Ensure that HTML elements with both valid lang and xml:lang attributes agree on the base language of the page",
-      "help": "HTML elements with lang and xml:lang must have the same base language"
-    },
-    "identical-links-same-purpose": {
-      "description": "Ensure that links with the same accessible name serve a similar purpose",
-      "help": "Links with the same name must have a similar purpose"
-    },
-    "image-alt": {
-      "description": "Ensures <img> elements have alternate text or a role of none or presentation",
-      "help": "Images must have alternate text"
-    },
-    "image-redundant-alt": {
-      "description": "Ensure image alternative is not repeated as text",
-      "help": "Alternative text of images should not be repeated as text"
-    },
-    "input-button-name": {
-      "description": "Ensures input buttons have discernible text",
-      "help": "Input buttons must have discernible text"
-    },
-    "input-image-alt": {
-      "description": "Ensures <input type=\"image\"> elements have alternate text",
-      "help": "Image buttons must have alternate text"
-    },
-    "label-content-name-mismatch": {
-      "description": "Ensures that elements labelled through their content must have their visible text as part of their accessible name",
-      "help": "Elements must have their visible text as part of their accessible name"
-    },
-    "label-title-only": {
-      "description": "Ensures that every form element has a visible label and is not solely labeled using hidden labels, or the title or aria-describedby attributes",
-      "help": "Form elements should have a visible label"
-    },
-    "label": {
-      "description": "Ensures every form element has a label",
-      "help": "Form elements must have labels"
-    },
-    "landmark-banner-is-top-level": {
-      "description": "Ensures the banner landmark is at top level",
-      "help": "Banner landmark should not be contained in another landmark"
-    },
-    "landmark-complementary-is-top-level": {
-      "description": "Ensures the complementary landmark or aside is at top level",
-      "help": "Aside should not be contained in another landmark"
-    },
-    "landmark-contentinfo-is-top-level": {
-      "description": "Ensures the contentinfo landmark is at top level",
-      "help": "Contentinfo landmark should not be contained in another landmark"
-    },
-    "landmark-main-is-top-level": {
-      "description": "Ensures the main landmark is at top level",
-      "help": "Main landmark should not be contained in another landmark"
-    },
-    "landmark-no-duplicate-banner": {
-      "description": "Ensures the document has at most one banner landmark",
-      "help": "Document should not have more than one banner landmark"
-    },
-    "landmark-no-duplicate-contentinfo": {
-      "description": "Ensures the document has at most one contentinfo landmark",
-      "help": "Document should not have more than one contentinfo landmark"
-    },
-    "landmark-no-duplicate-main": {
-      "description": "Ensures the document has at most one main landmark",
-      "help": "Document should not have more than one main landmark"
-    },
-    "landmark-one-main": {
-      "description": "Ensures the document has a main landmark",
-      "help": "Document should have one main landmark"
-    },
-    "landmark-unique": {
-      "help": "Ensures landmarks are unique",
-      "description": "Landmarks should have a unique role or role/label/title (i.e. accessible name) combination"
-    },
-    "link-in-text-block": {
-      "description": "Ensure links are distinguished from surrounding text in a way that does not rely on color",
-      "help": "Links must be distinguishable without relying on color"
-    },
-    "link-name": {
-      "description": "Ensures links have discernible text",
-      "help": "Links must have discernible text"
-    },
-    "list": {
-      "description": "Ensures that lists are structured correctly",
-      "help": "<ul> and <ol> must only directly contain <li>, <script> or <template> elements"
-    },
-    "listitem": {
-      "description": "Ensures <li> elements are used semantically",
-      "help": "<li> elements must be contained in a <ul> or <ol>"
-    },
-    "marquee": {
-      "description": "Ensures <marquee> elements are not used",
-      "help": "<marquee> elements are deprecated and must not be used"
-    },
-    "meta-refresh-no-exceptions": {
-      "description": "Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh",
-      "help": "Delayed refresh must not be used"
-    },
-    "meta-refresh": {
-      "description": "Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh",
-      "help": "Delayed refresh under 20 hours must not be used"
-    },
-    "meta-viewport-large": {
-      "description": "Ensures <meta name=\"viewport\"> can scale a significant amount",
-      "help": "Users should be able to zoom and scale the text up to 500%"
-    },
-    "meta-viewport": {
-      "description": "Ensures <meta name=\"viewport\"> does not disable text scaling and zooming",
-      "help": "Zooming and scaling must not be disabled"
-    },
-    "nested-interactive": {
-      "description": "Ensures interactive controls are not nested as they are not always announced by screen readers or can cause focus problems for assistive technologies",
-      "help": "Interactive controls must not be nested"
-    },
-    "no-autoplay-audio": {
-      "description": "Ensures <video> or <audio> elements do not autoplay audio for more than 3 seconds without a control mechanism to stop or mute the audio",
-      "help": "<video> or <audio> elements must not play automatically"
-    },
-    "object-alt": {
-      "description": "Ensures <object> elements have alternate text",
-      "help": "<object> elements must have alternate text"
-    },
-    "p-as-heading": {
-      "description": "Ensure bold, italic text and font-size is not used to style <p> elements as a heading",
-      "help": "Styled <p> elements must not be used as headings"
-    },
-    "page-has-heading-one": {
-      "description": "Ensure that the page, or at least one of its frames contains a level-one heading",
-      "help": "Page should contain a level-one heading"
-    },
-    "presentation-role-conflict": {
-      "description": "Elements marked as presentational should not have global ARIA or tabindex to ensure all screen readers ignore them",
-      "help": "Ensure elements marked as presentational are consistently ignored"
-    },
-    "region": {
-      "description": "Ensures all page content is contained by landmarks",
-      "help": "All page content should be contained by landmarks"
-    },
-    "role-img-alt": {
-      "description": "Ensures [role='img'] elements have alternate text",
-      "help": "[role='img'] elements must have an alternative text"
-    },
-    "scope-attr-valid": {
-      "description": "Ensures the scope attribute is used correctly on tables",
-      "help": "scope attribute should be used correctly"
-    },
-    "scrollable-region-focusable": {
-      "description": "Ensure elements that have scrollable content are accessible by keyboard",
-      "help": "Scrollable region must have keyboard access"
-    },
-    "select-name": {
-      "description": "Ensures select element has an accessible name",
-      "help": "Select element must have an accessible name"
-    },
-    "server-side-image-map": {
-      "description": "Ensures that server-side image maps are not used",
-      "help": "Server-side image maps must not be used"
-    },
-    "skip-link": {
-      "description": "Ensure all skip links have a focusable target",
-      "help": "The skip-link target should exist and be focusable"
-    },
-    "svg-img-alt": {
-      "description": "Ensures <svg> elements with an img, graphics-document or graphics-symbol role have an accessible text",
-      "help": "<svg> elements with an img role must have an alternative text"
-    },
-    "tabindex": {
-      "description": "Ensures tabindex attribute values are not greater than 0",
-      "help": "Elements should not have tabindex greater than zero"
-    },
-    "table-duplicate-name": {
-      "description": "Ensure the <caption> element does not contain the same text as the summary attribute",
-      "help": "tables should not have the same summary and caption"
-    },
-    "table-fake-caption": {
-      "description": "Ensure that tables with a caption use the <caption> element.",
-      "help": "Data or header cells must not be used to give caption to a data table."
-    },
-    "target-size": {
-      "description": "Ensure touch target have sufficient size and space",
-      "help": "All touch targets must be 24px large, or leave sufficient space"
-    },
-    "td-has-header": {
-      "description": "Ensure that each non-empty data cell in a <table> larger than 3 by 3  has one or more table headers",
-      "help": "Non-empty <td> elements in larger <table> must have an associated table header"
-    },
-    "td-headers-attr": {
-      "description": "Ensure that each cell in a table that uses the headers attribute refers only to other cells in that table",
-      "help": "Table cells that use the headers attribute must only refer to cells in the same table"
-    },
-    "th-has-data-cells": {
-      "description": "Ensure that <th> elements and elements with role=columnheader/rowheader have data cells they describe",
-      "help": "Table headers in a data table must refer to data cells"
-    },
-    "valid-lang": {
-      "description": "Ensures lang attributes have valid values",
-      "help": "lang attribute must have a valid value"
-    },
-    "video-caption": {
-      "description": "Ensures <video> elements have captions",
-      "help": "<video> elements must have captions"
-    }
-  },
-  "checks": {
-    "abstractrole": {
-      "pass": "Abstract roles are not used",
-      "fail": {
-        "singular": "Abstract role cannot be directly used: ${data.values}",
-        "plural": "Abstract roles cannot be directly used: ${data.values}"
-      }
-    },
-    "aria-allowed-attr": {
-      "pass": "ARIA attributes are used correctly for the defined role",
-      "fail": {
-        "singular": "ARIA attribute is not allowed: ${data.values}",
-        "plural": "ARIA attributes are not allowed: ${data.values}"
-      },
-      "incomplete": "Check that there is no problem if the ARIA attribute is ignored on this element: ${data.values}"
-    },
-    "aria-allowed-role": {
-      "pass": "ARIA role is allowed for given element",
-      "fail": {
-        "singular": "ARIA role ${data.values} is not allowed for given element",
-        "plural": "ARIA roles ${data.values} are not allowed for given element"
-      },
-      "incomplete": {
-        "singular": "ARIA role ${data.values} must be removed when the element is made visible, as it is not allowed for the element",
-        "plural": "ARIA roles ${data.values} must be removed when the element is made visible, as they are not allowed for the element"
-      }
-    },
-    "aria-busy": {
-      "pass": "Element has an aria-busy attribute",
-      "fail": "Element uses aria-busy=\"true\" while showing a loader"
-    },
-    "aria-errormessage": {
-      "pass": "aria-errormessage exists and references elements visible to screen readers that use a supported aria-errormessage technique",
-      "fail": {
-        "singular": "aria-errormessage value `${data.values}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)",
-        "plural": "aria-errormessage values `${data.values}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)",
-        "hidden": "aria-errormessage value `${data.values}` cannot reference a hidden element"
-      },
-      "incomplete": {
-        "singular": "ensure aria-errormessage value `${data.values}` references an existing element",
-        "plural": "ensure aria-errormessage values `${data.values}` reference existing elements",
-        "idrefs": "unable to determine if aria-errormessage element exists on the page: ${data.values}"
-      }
-    },
-    "aria-hidden-body": {
-      "pass": "No aria-hidden attribute is present on document body",
-      "fail": "aria-hidden=true should not be present on the document body"
-    },
-    "aria-level": {
-      "pass": "aria-level values are valid",
-      "incomplete": "aria-level values greater than 6 are not supported in all screenreader and browser combinations"
-    },
-    "aria-prohibited-attr": {
-      "pass": "ARIA attribute is allowed",
-      "fail": {
-        "hasRolePlural": "${data.prohibited} attributes cannot be used with role \"${data.role}\".",
-        "hasRoleSingular": "${data.prohibited} attribute cannot be used with role \"${data.role}\".",
-        "noRolePlural": "${data.prohibited} attributes cannot be used on a ${data.nodeName} with no valid role attribute.",
-        "noRoleSingular": "${data.prohibited} attribute cannot be used on a ${data.nodeName} with no valid role attribute."
-      },
-      "incomplete": {
-        "hasRoleSingular": "${data.prohibited} attribute is not well supported with role \"${data.role}\".",
-        "hasRolePlural": "${data.prohibited} attributes are not well supported with role \"${data.role}\".",
-        "noRoleSingular": "${data.prohibited} attribute is not well supported on a ${data.nodeName} with no valid role attribute.",
-        "noRolePlural": "${data.prohibited} attributes are not well supported on a ${data.nodeName} with no valid role attribute."
-      }
-    },
-    "aria-required-attr": {
-      "pass": "All required ARIA attributes are present",
-      "fail": {
-        "singular": "Required ARIA attribute not present: ${data.values}",
-        "plural": "Required ARIA attributes not present: ${data.values}"
-      }
-    },
-    "aria-required-children": {
-      "pass": "Required ARIA children are present",
-      "fail": {
-        "singular": "Required ARIA child role not present: ${data.values}",
-        "plural": "Required ARIA children role not present: ${data.values}",
-        "unallowed": "Element has children which are not allowed: ${data.values}"
-      },
-      "incomplete": {
-        "singular": "Expecting ARIA child role to be added: ${data.values}",
-        "plural": "Expecting ARIA children role to be added: ${data.values}"
-      }
-    },
-    "aria-required-parent": {
-      "pass": "Required ARIA parent role present",
-      "fail": {
-        "singular": "Required ARIA parent role not present: ${data.values}",
-        "plural": "Required ARIA parents role not present: ${data.values}"
-      }
-    },
-    "aria-roledescription": {
-      "pass": "aria-roledescription used on a supported semantic role",
-      "incomplete": "Check that the aria-roledescription is announced by supported screen readers",
-      "fail": "Give the element a role that supports aria-roledescription"
-    },
-    "aria-unsupported-attr": {
-      "pass": "ARIA attribute is supported",
-      "fail": "ARIA attribute is not widely supported in screen readers and assistive technologies: ${data.values}"
-    },
-    "aria-valid-attr-value": {
-      "pass": "ARIA attribute values are valid",
-      "fail": {
-        "singular": "Invalid ARIA attribute value: ${data.values}",
-        "plural": "Invalid ARIA attribute values: ${data.values}"
-      },
-      "incomplete": {
-        "noId": "ARIA attribute element ID does not exist on the page: ${data.needsReview}",
-        "noIdShadow": "ARIA attribute element ID does not exist on the page or is a descendant of a different shadow DOM tree: ${data.needsReview}",
-        "ariaCurrent": "ARIA attribute value is invalid and will be treated as \"aria-current=true\": ${data.needsReview}",
-        "idrefs": "Unable to determine if ARIA attribute element ID exists on the page: ${data.needsReview}",
-        "empty": "ARIA attribute value is ignored while empty: ${data.needsReview}"
-      }
-    },
-    "aria-valid-attr": {
-      "pass": "ARIA attribute name is valid",
-      "fail": {
-        "singular": "Invalid ARIA attribute name: ${data.values}",
-        "plural": "Invalid ARIA attribute names: ${data.values}"
-      }
-    },
-    "deprecatedrole": {
-      "pass": "ARIA role is not deprecated",
-      "fail": "The role used is deprecated: ${data}"
-    },
-    "fallbackrole": {
-      "pass": "Only one role value used",
-      "fail": "Use only one role value, since fallback roles are not supported in older browsers",
-      "incomplete": "Use only role 'presentation' or 'none' since they are synonymous."
-    },
-    "has-global-aria-attribute": {
-      "pass": {
-        "singular": "Element has global ARIA attribute: ${data.values}",
-        "plural": "Element has global ARIA attributes: ${data.values}"
-      },
-      "fail": "Element does not have global ARIA attribute"
-    },
-    "has-widget-role": {
-      "pass": "Element has a widget role.",
-      "fail": "Element does not have a widget role."
-    },
-    "invalidrole": {
-      "pass": "ARIA role is valid",
-      "fail": {
-        "singular": "Role must be one of the valid ARIA roles: ${data.values}",
-        "plural": "Roles must be one of the valid ARIA roles: ${data.values}"
-      }
-    },
-    "is-element-focusable": {
-      "pass": "Element is focusable.",
-      "fail": "Element is not focusable."
-    },
-    "no-implicit-explicit-label": {
-      "pass": "There is no mismatch between a <label> and accessible name",
-      "incomplete": "Check that the <label> does not need be part of the ARIA ${data} field's name"
-    },
-    "unsupportedrole": {
-      "pass": "ARIA role is supported",
-      "fail": "The role used is not widely supported in screen readers and assistive technologies: ${data}"
-    },
-    "valid-scrollable-semantics": {
-      "pass": "Element has valid semantics for an element in the focus order.",
-      "fail": "Element has invalid semantics for an element in the focus order."
-    },
-    "color-contrast-enhanced": {
-      "pass": "Element has sufficient color contrast of ${data.contrastRatio}",
-      "fail": {
-        "default": "Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
-        "fgOnShadowColor": "Element has insufficient color contrast of ${data.contrastRatio} between the foreground and shadow color (foreground color: ${data.fgColor}, text-shadow color: ${data.shadowColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
-        "shadowOnBgColor": "Element has insufficient color contrast of ${data.contrastRatio} between the shadow color and background color (text-shadow color: ${data.shadowColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}"
-      },
-      "incomplete": {
-        "default": "Unable to determine contrast ratio",
-        "bgImage": "Element's background color could not be determined due to a background image",
-        "bgGradient": "Element's background color could not be determined due to a background gradient",
-        "imgNode": "Element's background color could not be determined because element contains an image node",
-        "bgOverlap": "Element's background color could not be determined because it is overlapped by another element",
-        "fgAlpha": "Element's foreground color could not be determined because of alpha transparency",
-        "elmPartiallyObscured": "Element's background color could not be determined because it's partially obscured by another element",
-        "elmPartiallyObscuring": "Element's background color could not be determined because it partially overlaps other elements",
-        "outsideViewport": "Element's background color could not be determined because it's outside the viewport",
-        "equalRatio": "Element has a 1:1 contrast ratio with the background",
-        "shortTextContent": "Element content is too short to determine if it is actual text content",
-        "nonBmp": "Element content contains only non-text characters",
-        "pseudoContent": "Element's background color could not be determined due to a pseudo element"
-      }
-    },
-    "color-contrast": {
-      "pass": {
-        "default": "Element has sufficient color contrast of ${data.contrastRatio}",
-        "hidden": "Element is hidden"
-      },
-      "fail": {
-        "default": "Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
-        "fgOnShadowColor": "Element has insufficient color contrast of ${data.contrastRatio} between the foreground and shadow color (foreground color: ${data.fgColor}, text-shadow color: ${data.shadowColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}",
-        "shadowOnBgColor": "Element has insufficient color contrast of ${data.contrastRatio} between the shadow color and background color (text-shadow color: ${data.shadowColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}"
-      },
-      "incomplete": {
-        "default": "Unable to determine contrast ratio",
-        "bgImage": "Element's background color could not be determined due to a background image",
-        "bgGradient": "Element's background color could not be determined due to a background gradient",
-        "imgNode": "Element's background color could not be determined because element contains an image node",
-        "bgOverlap": "Element's background color could not be determined because it is overlapped by another element",
-        "fgAlpha": "Element's foreground color could not be determined because of alpha transparency",
-        "elmPartiallyObscured": "Element's background color could not be determined because it's partially obscured by another element",
-        "elmPartiallyObscuring": "Element's background color could not be determined because it partially overlaps other elements",
-        "outsideViewport": "Element's background color could not be determined because it's outside the viewport",
-        "equalRatio": "Element has a 1:1 contrast ratio with the background",
-        "shortTextContent": "Element content is too short to determine if it is actual text content",
-        "nonBmp": "Element content contains only non-text characters",
-        "pseudoContent": "Element's background color could not be determined due to a pseudo element"
-      }
-    },
-    "link-in-text-block-style": {
-      "pass": "Links can be distinguished from surrounding text by visual styling",
-      "fail": "The link has no styling (such as underline) to distinguish it from the surrounding text"
-    },
-    "link-in-text-block": {
-      "pass": "Links can be distinguished from surrounding text in some way other than by color",
-      "fail": {
-        "fgContrast": "The link has insufficient color contrast of ${data.contrastRatio}:1 with the surrounding text. (Minimum contrast is ${data.requiredContrastRatio}:1, link text: ${data.nodeColor}, surrounding text: ${data.parentColor})",
-        "bgContrast": "The link background has insufficient color contrast of ${data.contrastRatio} (Minimum contrast is ${data.requiredContrastRatio}:1, link background color: ${data.nodeBackgroundColor}, surrounding background color: ${data.parentBackgroundColor})"
-      },
-      "incomplete": {
-        "default": "Element's foreground contrast ratio could not be determined",
-        "bgContrast": "Element's background contrast ratio could not be determined",
-        "bgImage": "Element's contrast ratio could not be determined due to a background image",
-        "bgGradient": "Element's contrast ratio could not be determined due to a background gradient",
-        "imgNode": "Element's contrast ratio could not be determined because element contains an image node",
-        "bgOverlap": "Element's contrast ratio could not be determined because of element overlap"
-      }
-    },
-    "autocomplete-appropriate": {
-      "pass": "the autocomplete value is on an appropriate element",
-      "fail": "the autocomplete value is inappropriate for this type of input"
-    },
-    "autocomplete-valid": {
-      "pass": "the autocomplete attribute is correctly formatted",
-      "fail": "the autocomplete attribute is incorrectly formatted"
-    },
-    "accesskeys": {
-      "pass": "Accesskey attribute value is unique",
-      "fail": "Document has multiple elements with the same accesskey"
-    },
-    "focusable-content": {
-      "pass": "Element contains focusable elements",
-      "fail": "Element should have focusable content"
-    },
-    "focusable-disabled": {
-      "pass": "No focusable elements contained within element",
-      "incomplete": "Check if the focusable elements immediately move the focus indicator",
-      "fail": "Focusable content should be disabled or be removed from the DOM"
-    },
-    "focusable-element": {
-      "pass": "Element is focusable",
-      "fail": "Element should be focusable"
-    },
-    "focusable-modal-open": {
-      "pass": "No focusable elements while a modal is open",
-      "incomplete": "Check that focusable elements are not tabbable in the current state"
-    },
-    "focusable-no-name": {
-      "pass": "Element is not in tab order or has accessible text",
-      "fail": "Element is in tab order and does not have accessible text",
-      "incomplete": "Unable to determine if element has an accessible name"
-    },
-    "focusable-not-tabbable": {
-      "pass": "No focusable elements contained within element",
-      "incomplete": "Check if the focusable elements immediately move the focus indicator",
-      "fail": "Focusable content should have tabindex='-1' or be removed from the DOM"
-    },
-    "frame-focusable-content": {
-      "pass": "Element does not have focusable descendants",
-      "fail": "Element has focusable descendants",
-      "incomplete": "Could not determine if element has descendants"
-    },
-    "landmark-is-top-level": {
-      "pass": "The ${data.role} landmark is at the top level.",
-      "fail": "The ${data.role} landmark is contained in another landmark."
-    },
-    "no-focusable-content": {
-      "pass": "Element does not have focusable descendants",
-      "fail": {
-        "default": "Element has focusable descendants",
-        "notHidden": "Using a negative tabindex on an element inside an interactive control does not prevent assistive technologies from focusing the element (even with 'aria-hidden=true')"
-      },
-      "incomplete": "Could not determine if element has descendants"
-    },
-    "page-has-heading-one": {
-      "pass": "Page has at least one level-one heading",
-      "fail": "Page must have a level-one heading"
-    },
-    "page-has-main": {
-      "pass": "Document has at least one main landmark",
-      "fail": "Document does not have a main landmark"
-    },
-    "page-no-duplicate-banner": {
-      "pass": "Document does not have more than one banner landmark",
-      "fail": "Document has more than one banner landmark"
-    },
-    "page-no-duplicate-contentinfo": {
-      "pass": "Document does not have more than one contentinfo landmark",
-      "fail": "Document has more than one contentinfo landmark"
-    },
-    "page-no-duplicate-main": {
-      "pass": "Document does not have more than one main landmark",
-      "fail": "Document has more than one main landmark"
-    },
-    "tabindex": {
-      "pass": "Element does not have a tabindex greater than 0",
-      "fail": "Element has a tabindex greater than 0"
-    },
-    "alt-space-value": {
-      "pass": "Element has a valid alt attribute value",
-      "fail": "Element has an alt attribute containing only a space character, which is not ignored by all screen readers"
-    },
-    "duplicate-img-label": {
-      "pass": "Element does not duplicate existing text in <img> alt text",
-      "fail": "Element contains <img> element with alt text that duplicates existing text"
-    },
-    "explicit-label": {
-      "pass": "Form element has an explicit <label>",
-      "fail": "Form element does not have an explicit <label>",
-      "incomplete": "Unable to determine if form element has an explicit <label>"
-    },
-    "help-same-as-label": {
-      "pass": "Help text (title or aria-describedby) does not duplicate label text",
-      "fail": "Help text (title or aria-describedby) text is the same as the label text"
-    },
-    "hidden-explicit-label": {
-      "pass": "Form element has a visible explicit <label>",
-      "fail": "Form element has explicit <label> that is hidden",
-      "incomplete": "Unable to determine if form element has explicit <label> that is hidden"
-    },
-    "implicit-label": {
-      "pass": "Form element has an implicit (wrapped) <label>",
-      "fail": "Form element does not have an implicit (wrapped) <label>",
-      "incomplete": "Unable to determine if form element has an implicit (wrapped} <label>"
-    },
-    "label-content-name-mismatch": {
-      "pass": "Element contains visible text as part of it's accessible name",
-      "fail": "Text inside the element is not included in the accessible name"
-    },
-    "multiple-label": {
-      "pass": "Form field does not have multiple label elements",
-      "incomplete": "Multiple label elements is not widely supported in assistive technologies. Ensure the first label contains all necessary information."
-    },
-    "title-only": {
-      "pass": "Form element does not solely use title attribute for its label",
-      "fail": "Only title used to generate label for form element"
-    },
-    "landmark-is-unique": {
-      "pass": "Landmarks must have a unique role or role/label/title (i.e. accessible name) combination",
-      "fail": "The landmark must have a unique aria-label, aria-labelledby, or title to make landmarks distinguishable"
-    },
-    "has-lang": {
-      "pass": "The <html> element has a lang attribute",
-      "fail": {
-        "noXHTML": "The xml:lang attribute is not valid on HTML pages, use the lang attribute.",
-        "noLang": "The <html> element does not have a lang attribute"
-      }
-    },
-    "valid-lang": {
-      "pass": "Value of lang attribute is included in the list of valid languages",
-      "fail": "Value of lang attribute not included in the list of valid languages"
-    },
-    "xml-lang-mismatch": {
-      "pass": "Lang and xml:lang attributes have the same base language",
-      "fail": "Lang and xml:lang attributes do not have the same base language"
-    },
-    "dlitem": {
-      "pass": "Description list item has a <dl> parent element",
-      "fail": "Description list item does not have a <dl> parent element"
-    },
-    "listitem": {
-      "pass": "List item has a <ul>, <ol> or role=\"list\" parent element",
-      "fail": {
-        "default": "List item does not have a <ul>, <ol> parent element",
-        "roleNotValid": "List item does not have a <ul>, <ol> parent element without a role, or a role=\"list\""
-      }
-    },
-    "only-dlitems": {
-      "pass": "dl element only has direct children that are allowed inside; <dt>, <dd>, or <div> elements",
-      "fail": "dl element has direct children that are not allowed: ${data.values}"
-    },
-    "only-listitems": {
-      "pass": "List element only has direct children that are allowed inside <li> elements",
-      "fail": "List element has direct children that are not allowed: ${data.values}"
-    },
-    "structured-dlitems": {
-      "pass": "When not empty, element has both <dt> and <dd> elements",
-      "fail": "When not empty, element does not have at least one <dt> element followed by at least one <dd> element"
-    },
-    "caption": {
-      "pass": "The multimedia element has a captions track",
-      "incomplete": "Check that captions is available for the element"
-    },
-    "frame-tested": {
-      "pass": "The iframe was tested with axe-core",
-      "fail": "The iframe could not be tested with axe-core",
-      "incomplete": "The iframe still has to be tested with axe-core"
-    },
-    "no-autoplay-audio": {
-      "pass": "<video> or <audio> does not output audio for more than allowed duration or has controls mechanism",
-      "fail": "<video> or <audio> outputs audio for more than allowed duration and does not have a controls mechanism",
-      "incomplete": "Check that the <video> or <audio> does not output audio for more than allowed duration or provides a controls mechanism"
-    },
-    "css-orientation-lock": {
-      "pass": "Display is operable, and orientation lock does not exist",
-      "fail": "CSS Orientation lock is applied, and makes display inoperable",
-      "incomplete": "CSS Orientation lock cannot be determined"
-    },
-    "meta-viewport-large": {
-      "pass": "<meta> tag does not prevent significant zooming on mobile devices",
-      "fail": "<meta> tag limits zooming on mobile devices"
-    },
-    "meta-viewport": {
-      "pass": "<meta> tag does not disable zooming on mobile devices",
-      "fail": "${data} on <meta> tag disables zooming on mobile devices"
-    },
-    "target-offset": {
-      "pass": "Target has sufficient offset from its closest neighbor (${data.closestOffset}px should be at least ${data.minOffset}px)",
-      "fail": "Target has insufficient offset from its closest neighbor (${data.closestOffset}px should be at least ${data.minOffset}px)",
-      "incomplete": {
-        "default": "Element with negative tabindex has insufficient offset from its closest neighbor (${data.closestOffset}px should be at least ${data.minOffset}px). Is this a target?",
-        "nonTabbableNeighbor": "Target has insufficient offset from a neighbor with negative tabindex (${data.closestOffset}px should be at least ${data.minOffset}px). Is the neighbor a target?"
-      }
-    },
-    "target-size": {
-      "pass": {
-        "default": "Control has sufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)",
-        "obscured": "Control is ignored because it is fully obscured and thus not clickable"
-      },
-      "fail": {
-        "default": "Target has insufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)",
-        "partiallyObscured": "Target has insufficient size because it is partially obscured (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)"
-      },
-      "incomplete": {
-        "default": "Element with negative tabindex has insufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is this a target?",
-        "contentOverflow": "Element size could not be accurately determined due to overflow content",
-        "partiallyObscured": "Element with negative tabindex has insufficient size because it is partially obscured (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is this a target?",
-        "partiallyObscuredNonTabbable": "Target has insufficient size because it is partially obscured by a neighbor with negative tabindex (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is the neighbor a target?"
-      }
-    },
-    "header-present": {
-      "pass": "Page has a heading",
-      "fail": "Page does not have a heading"
-    },
-    "heading-order": {
-      "pass": "Heading order valid",
-      "fail": "Heading order invalid",
-      "incomplete": "Unable to determine previous heading"
-    },
-    "identical-links-same-purpose": {
-      "pass": "There are no other links with the same name, that go to a different URL",
-      "incomplete": "Check that links have the same purpose, or are intentionally ambiguous."
-    },
-    "internal-link-present": {
-      "pass": "Valid skip link found",
-      "fail": "No valid skip link found"
-    },
-    "landmark": {
-      "pass": "Page has a landmark region",
-      "fail": "Page does not have a landmark region"
-    },
-    "meta-refresh-no-exceptions": {
-      "pass": "<meta> tag does not immediately refresh the page",
-      "fail": "<meta> tag forces timed refresh of page"
-    },
-    "meta-refresh": {
-      "pass": "<meta> tag does not immediately refresh the page",
-      "fail": "<meta> tag forces timed refresh of page (less than 20 hours)"
-    },
-    "p-as-heading": {
-      "pass": "<p> elements are not styled as headings",
-      "fail": "Heading elements should be used instead of styled <p> elements",
-      "incomplete": "Unable to determine if <p> elements are styled as headings"
-    },
-    "region": {
-      "pass": "All page content is contained by landmarks",
-      "fail": "Some page content is not contained by landmarks"
-    },
-    "skip-link": {
-      "pass": "Skip link target exists",
-      "incomplete": "Skip link target should become visible on activation",
-      "fail": "No skip link target"
-    },
-    "unique-frame-title": {
-      "pass": "Element's title attribute is unique",
-      "fail": "Element's title attribute is not unique"
-    },
-    "duplicate-id-active": {
-      "pass": "Document has no active elements that share the same id attribute",
-      "fail": "Document has active elements with the same id attribute: ${data}"
-    },
-    "duplicate-id-aria": {
-      "pass": "Document has no elements referenced with ARIA or labels that share the same id attribute",
-      "fail": "Document has multiple elements referenced with ARIA with the same id attribute: ${data}"
-    },
-    "duplicate-id": {
-      "pass": "Document has no static elements that share the same id attribute",
-      "fail": "Document has multiple static elements with the same id attribute: ${data}"
-    },
-    "aria-label": {
-      "pass": "aria-label attribute exists and is not empty",
-      "fail": "aria-label attribute does not exist or is empty"
-    },
-    "aria-labelledby": {
-      "pass": "aria-labelledby attribute exists and references elements that are visible to screen readers",
-      "fail": "aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty",
-      "incomplete": "ensure aria-labelledby references an existing element"
-    },
-    "avoid-inline-spacing": {
-      "pass": "No inline styles with '!important' that affect text spacing has been specified",
-      "fail": {
-        "singular": "Remove '!important' from inline style ${data.values}, as overriding this is not supported by most browsers",
-        "plural": "Remove '!important' from inline styles ${data.values}, as overriding this is not supported by most browsers"
-      }
-    },
-    "button-has-visible-text": {
-      "pass": "Element has inner text that is visible to screen readers",
-      "fail": "Element does not have inner text that is visible to screen readers",
-      "incomplete": "Unable to determine if element has children"
-    },
-    "doc-has-title": {
-      "pass": "Document has a non-empty <title> element",
-      "fail": "Document does not have a non-empty <title> element"
-    },
-    "exists": {
-      "pass": "Element does not exist",
-      "incomplete": "Element exists"
-    },
-    "has-alt": {
-      "pass": "Element has an alt attribute",
-      "fail": "Element does not have an alt attribute"
-    },
-    "has-visible-text": {
-      "pass": "Element has text that is visible to screen readers",
-      "fail": "Element does not have text that is visible to screen readers",
-      "incomplete": "Unable to determine if element has children"
-    },
-    "important-letter-spacing": {
-      "pass": "Letter-spacing in the style attribute is not set to !important, or meets the minimum",
-      "fail": "letter-spacing in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)"
-    },
-    "important-line-height": {
-      "pass": "line-height in the style attribute is not set to !important, or meets the minimum",
-      "fail": "line-height in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)"
-    },
-    "important-word-spacing": {
-      "pass": "word-spacing in the style attribute is not set to !important, or meets the minimum",
-      "fail": "word-spacing in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)"
-    },
-    "is-on-screen": {
-      "pass": "Element is not visible",
-      "fail": "Element is visible"
-    },
-    "non-empty-alt": {
-      "pass": "Element has a non-empty alt attribute",
-      "fail": {
-        "noAttr": "Element has no alt attribute",
-        "emptyAttr": "Element has an empty alt attribute"
-      }
-    },
-    "non-empty-if-present": {
-      "pass": {
-        "default": "Element does not have a value attribute",
-        "has-label": "Element has a non-empty value attribute"
-      },
-      "fail": "Element has a value attribute and the value attribute is empty"
-    },
-    "non-empty-placeholder": {
-      "pass": "Element has a placeholder attribute",
-      "fail": {
-        "noAttr": "Element has no placeholder attribute",
-        "emptyAttr": "Element has an empty placeholder attribute"
-      }
-    },
-    "non-empty-title": {
-      "pass": "Element has a title attribute",
-      "fail": {
-        "noAttr": "Element has no title attribute",
-        "emptyAttr": "Element has an empty title attribute"
-      }
-    },
-    "non-empty-value": {
-      "pass": "Element has a non-empty value attribute",
-      "fail": {
-        "noAttr": "Element has no value attribute",
-        "emptyAttr": "Element has an empty value attribute"
-      }
-    },
-    "presentational-role": {
-      "pass": "Element's default semantics were overriden with role=\"${data.role}\"",
-      "fail": {
-        "default": "Element's default semantics were not overridden with role=\"none\" or role=\"presentation\"",
-        "globalAria": "Element's role is not presentational because it has a global ARIA attribute",
-        "focusable": "Element's role is not presentational because it is focusable",
-        "both": "Element's role is not presentational because it has a global ARIA attribute and is focusable",
-        "iframe": "Using the \"title\" attribute on an ${data.nodeName} element with a presentational role behaves inconsistently between screen readers"
-      }
-    },
-    "role-none": {
-      "pass": "Element's default semantics were overriden with role=\"none\"",
-      "fail": "Element's default semantics were not overridden with role=\"none\""
-    },
-    "role-presentation": {
-      "pass": "Element's default semantics were overriden with role=\"presentation\"",
-      "fail": "Element's default semantics were not overridden with role=\"presentation\""
-    },
-    "svg-non-empty-title": {
-      "pass": "Element has a child that is a title",
-      "fail": {
-        "noTitle": "Element has no child that is a title",
-        "emptyTitle": "Element child title is empty"
-      },
-      "incomplete": "Unable to determine element has a child that is a title"
-    },
-    "caption-faked": {
-      "pass": "The first row of a table is not used as a caption",
-      "fail": "The first child of the table should be a caption instead of a table cell"
-    },
-    "html5-scope": {
-      "pass": "Scope attribute is only used on table header elements (<th>)",
-      "fail": "In HTML 5, scope attributes may only be used on table header elements (<th>)"
-    },
-    "same-caption-summary": {
-      "pass": "Content of summary attribute and <caption> are not duplicated",
-      "fail": "Content of summary attribute and <caption> element are identical",
-      "incomplete": "Unable to determine if <table> element has a caption"
-    },
-    "scope-value": {
-      "pass": "Scope attribute is used correctly",
-      "fail": "The value of the scope attribute may only be 'row' or 'col'"
-    },
-    "td-has-header": {
-      "pass": "All non-empty data cells have table headers",
-      "fail": "Some non-empty data cells do not have table headers"
-    },
-    "td-headers-attr": {
-      "pass": "The headers attribute is exclusively used to refer to other cells in the table",
-      "incomplete": "The headers attribute is empty",
-      "fail": "The headers attribute is not exclusively used to refer to other cells in the table"
-    },
-    "th-has-data-cells": {
-      "pass": "All table header cells refer to data cells",
-      "fail": "Not all table header cells refer to data cells",
-      "incomplete": "Table data cells are missing or empty"
-    },
-    "hidden-content": {
-      "pass": "All content on the page has been analyzed.",
-      "fail": "There were problems analyzing the content on this page.",
-      "incomplete": "There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it."
-    }
-  },
-  "failureSummaries": {
-    "any": {
-      "failureMessage": "Fix any of the following:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
-    },
-    "none": {
-      "failureMessage": "Fix all of the following:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
-    }
-  },
+  "rules": {},
+  "checks": {},
+  "failureSummaries": {},
   "incompleteFallbackMessage": "axe couldn't tell the reason. Time to break out the element inspector!"
 }
diff --git a/package-lock.json b/package-lock.json
index 05c44338..60b11d22 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -20,7 +20,7 @@
         "browser-driver-manager": "1.0.4",
         "chai": "^4.3.7",
         "chalk": "^4.x",
-        "chromedriver": "^111.0.0",
+        "chromedriver": "latest",
         "clone": "^2.1.2",
         "conventional-commits-parser": "^3.2.4",
         "core-js": "^3.27.1",
@@ -2939,9 +2939,9 @@
       }
     },
     "node_modules/caniuse-lite": {
-      "version": "1.0.30001431",
-      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001431.tgz",
-      "integrity": "sha512-zBUoFU0ZcxpvSt9IU66dXVT/3ctO1cy4y9cscs1szkPlcWb6pasYM144GqrUygUbT+k7cmUCW61cvskjcv0enQ==",
+      "version": "1.0.30001504",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001504.tgz",
+      "integrity": "sha512-5uo7eoOp2mKbWyfMXnGO9rJWOGU8duvzEiYITW+wivukL7yHH4gX9yuRaobu6El4jPxo6jKZfG+N6fB621GD/Q==",
       "dev": true,
       "funding": [
         {
@@ -2951,6 +2951,10 @@
         {
           "type": "tidelift",
           "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
         }
       ]
     },
@@ -14196,9 +14200,9 @@
       }
     },
     "caniuse-lite": {
-      "version": "1.0.30001431",
-      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001431.tgz",
-      "integrity": "sha512-zBUoFU0ZcxpvSt9IU66dXVT/3ctO1cy4y9cscs1szkPlcWb6pasYM144GqrUygUbT+k7cmUCW61cvskjcv0enQ==",
+      "version": "1.0.30001504",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001504.tgz",
+      "integrity": "sha512-5uo7eoOp2mKbWyfMXnGO9rJWOGU8duvzEiYITW+wivukL7yHH4gX9yuRaobu6El4jPxo6jKZfG+N6fB621GD/Q==",
       "dev": true
     },
     "catharsis": {
diff --git a/package.json b/package.json
index 6e19596d..bd8d6363 100644
--- a/package.json
+++ b/package.json
@@ -185,5 +185,6 @@
       "eslint --fix",
       "prettier --write"
     ]
-  }
+  },
+  "browserslist": "last 2 Chrome versions"
 }
diff --git a/test/core/base/audit.js b/test/core/base/audit.js
index 7a9dfd5d..10b774f9 100644
--- a/test/core/base/audit.js
+++ b/test/core/base/audit.js
@@ -108,164 +108,6 @@ describe('Audit', function () {
     });
   });
 
-  describe('Audit#_constructHelpUrls', function () {
-    it('should create default help URLS', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-      assert.lengthOf(audit.rules, 1);
-      assert.equal(audit.data.rules.target, undefined);
-      audit._constructHelpUrls();
-      assert.deepEqual(audit.data.rules.target, {
-        helpUrl:
-          'https://dequeuniversity.com/rules/axe/' +
-          ver +
-          '/target?application=axeAPI'
-      });
-    });
-    it('should use changed branding', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-      assert.lengthOf(audit.rules, 1);
-      assert.equal(audit.data.rules.target, undefined);
-      audit.brand = 'thing';
-      audit._constructHelpUrls();
-      assert.deepEqual(audit.data.rules.target, {
-        helpUrl:
-          'https://dequeuniversity.com/rules/thing/' +
-          ver +
-          '/target?application=axeAPI'
-      });
-    });
-    it('should use changed application', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-      assert.lengthOf(audit.rules, 1);
-      assert.equal(audit.data.rules.target, undefined);
-      audit.application = 'thing';
-      audit._constructHelpUrls();
-      assert.deepEqual(audit.data.rules.target, {
-        helpUrl:
-          'https://dequeuniversity.com/rules/axe/' +
-          ver +
-          '/target?application=thing'
-      });
-    });
-
-    it('does not override helpUrls of different products', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target1',
-        matches: 'function () {return "hello";}',
-        selector: 'bob',
-        metadata: {
-          helpUrl:
-            'https://dequeuniversity.com/rules/myproject/' +
-            ver +
-            '/target1?application=axeAPI'
-        }
-      });
-      audit.addRule({
-        id: 'target2',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-
-      assert.equal(
-        audit.data.rules.target1.helpUrl,
-        'https://dequeuniversity.com/rules/myproject/' +
-          ver +
-          '/target1?application=axeAPI'
-      );
-      assert.isUndefined(audit.data.rules.target2);
-
-      assert.lengthOf(audit.rules, 2);
-      audit.brand = 'thing';
-      audit._constructHelpUrls();
-
-      assert.equal(
-        audit.data.rules.target1.helpUrl,
-        'https://dequeuniversity.com/rules/myproject/' +
-          ver +
-          '/target1?application=axeAPI'
-      );
-      assert.equal(
-        audit.data.rules.target2.helpUrl,
-        'https://dequeuniversity.com/rules/thing/' +
-          ver +
-          '/target2?application=axeAPI'
-      );
-    });
-    it('understands prerelease type version numbers', function () {
-      var tempVersion = axe.version;
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-
-      axe.version = '3.2.1-alpha.0';
-      audit._constructHelpUrls();
-
-      axe.version = tempVersion;
-      assert.equal(
-        audit.data.rules.target.helpUrl,
-        'https://dequeuniversity.com/rules/axe/3.2/target?application=axeAPI'
-      );
-    });
-
-    it('matches major release versions', function () {
-      var tempVersion = axe.version;
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-
-      axe.version = '1.0.0';
-      audit._constructHelpUrls();
-
-      axe.version = tempVersion;
-      assert.equal(
-        audit.data.rules.target.helpUrl,
-        'https://dequeuniversity.com/rules/axe/1.0/target?application=axeAPI'
-      );
-    });
-    it('sets the lang query if locale has been set', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-      audit.applyLocale({
-        lang: 'de'
-      });
-      assert.lengthOf(audit.rules, 1);
-      assert.equal(audit.data.rules.target, undefined);
-      audit._constructHelpUrls();
-      assert.deepEqual(audit.data.rules.target, {
-        helpUrl:
-          'https://dequeuniversity.com/rules/axe/' +
-          ver +
-          '/target?application=axeAPI&lang=de'
-      });
-    });
-  });
-
   describe('Audit#setBranding', function () {
     it('should change the brand', function () {
       var audit = new Audit();
@@ -295,65 +137,17 @@ describe('Audit', function () {
       assert.equal(audit.brand, 'axe');
       assert.equal(audit.application, 'thing');
     });
-    it('should call _constructHelpUrls', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-      assert.lengthOf(audit.rules, 1);
-      assert.equal(audit.data.rules.target, undefined);
-      audit.setBranding({
-        application: 'thing'
-      });
-      assert.deepEqual(audit.data.rules.target, {
-        helpUrl:
-          'https://dequeuniversity.com/rules/axe/' +
-          ver +
-          '/target?application=thing'
-      });
-    });
-    it('should call _constructHelpUrls even when nothing changed', function () {
-      var audit = new Audit();
-      audit.addRule({
-        id: 'target',
-        matches: 'function () {return "hello";}',
-        selector: 'bob'
-      });
-      assert.lengthOf(audit.rules, 1);
-      assert.equal(audit.data.rules.target, undefined);
-      audit.setBranding(undefined);
-      assert.deepEqual(audit.data.rules.target, {
-        helpUrl:
-          'https://dequeuniversity.com/rules/axe/' +
-          ver +
-          '/target?application=axeAPI'
-      });
-    });
     it('should not replace custom set branding', function () {
       var audit = new Audit();
       audit.addRule({
         id: 'target',
         matches: 'function () {return "hello";}',
-        selector: 'bob',
-        metadata: {
-          helpUrl:
-            'https://dequeuniversity.com/rules/customer-x/' +
-            ver +
-            '/target?application=axeAPI'
-        }
+        selector: 'bob'
       });
       audit.setBranding({
         application: 'thing',
         brand: 'other'
       });
-      assert.equal(
-        audit.data.rules.target.helpUrl,
-        'https://dequeuniversity.com/rules/customer-x/' +
-          ver +
-          '/target?application=axeAPI'
-      );
     });
   });
 
diff --git a/test/core/public/configure.js b/test/core/public/configure.js
index 12972a0a..f05053b1 100644
--- a/test/core/public/configure.js
+++ b/test/core/public/configure.js
@@ -4,7 +4,6 @@ describe('axe.configure', function () {
   // var Check = axe._thisWillBeDeletedDoNotUse.base.Check;
   var fixture = document.getElementById('fixture');
   var axeVersion = axe.version;
-  var ver = axe.version.substring(0, axe.version.lastIndexOf('.'));
 
   afterEach(function () {
     fixture.innerHTML = '';
@@ -95,22 +94,12 @@ describe('axe.configure', function () {
       branding: {}
     });
     assert.lengthOf(axe._audit.rules, 1);
-    assert.equal(
-      axe._audit.data.rules.bob.helpUrl,
-      'https://dequeuniversity.com/rules/axe/' + ver + '/bob?application=axeAPI'
-    );
     axe.configure({
       branding: {
         application: 'thing',
         brand: 'thung'
       }
     });
-    assert.equal(
-      axe._audit.data.rules.bob.helpUrl,
-      'https://dequeuniversity.com/rules/thung/' +
-        ver +
-        '/bob?application=thing'
-    );
   });
 
   it('sets branding on newly configured rules', function () {
@@ -129,13 +118,6 @@ describe('axe.configure', function () {
         }
       ]
     });
-
-    assert.equal(
-      axe._audit.data.rules.bob.helpUrl,
-      'https://dequeuniversity.com/rules/thung/' +
-        ver +
-        '/bob?application=thing'
-    );
   });
 
   it('should allow for overwriting of rules', function () {
diff --git a/test/core/public/get-rules.js b/test/core/public/get-rules.js
index 540b459e..03f1b1b0 100644
--- a/test/core/public/get-rules.js
+++ b/test/core/public/get-rules.js
@@ -1,6 +1,5 @@
 describe('axe.getRules', function () {
   'use strict';
-  var ver = axe.version.substring(0, axe.version.lastIndexOf('.'));
 
   beforeEach(function () {
     axe._load({
@@ -44,25 +43,9 @@ describe('axe.getRules', function () {
     assert.isArray(retValue);
     assert.lengthOf(retValue, 2);
     assert.equal(retValue[0].ruleId, 'awesomeRule1');
-    assert.equal(retValue[0].description, 'some interesting information');
-    assert.equal(retValue[0].help, 'halp');
-    assert.equal(
-      retValue[0].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule1?application=axeAPI'
-    );
     assert.deepEqual(retValue[0].tags, ['tag1']);
 
     assert.equal(retValue[1].ruleId, 'awesomeRule2');
-    assert.equal(retValue[1].description, 'also some interesting information');
-    assert.equal(retValue[1].help, 'halp me!');
-    assert.equal(
-      retValue[1].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule2?application=axeAPI'
-    );
     assert.deepEqual(retValue[1].tags, ['tag1', 'tag2']);
     assert.deepEqual(retValue[1].actIds, ['abc123', 'xyz789']);
 
@@ -70,14 +53,6 @@ describe('axe.getRules', function () {
     assert.isArray(retValue);
     assert.lengthOf(retValue, 1);
     assert.equal(retValue[0].ruleId, 'awesomeRule2');
-    assert.equal(retValue[0].description, 'also some interesting information');
-    assert.equal(retValue[0].help, 'halp me!');
-    assert.equal(
-      retValue[0].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule2?application=axeAPI'
-    );
     assert.deepEqual(retValue[0].tags, ['tag1', 'tag2']);
     assert.deepEqual(retValue[0].actIds, ['abc123', 'xyz789']);
   });
@@ -91,25 +66,9 @@ describe('axe.getRules', function () {
   it('should return all rules if given no tags - undefined', function () {
     var retValue = axe.getRules();
     assert.equal(retValue[0].ruleId, 'awesomeRule1');
-    assert.equal(retValue[0].description, 'some interesting information');
-    assert.equal(retValue[0].help, 'halp');
-    assert.equal(
-      retValue[0].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule1?application=axeAPI'
-    );
     assert.deepEqual(retValue[0].tags, ['tag1']);
 
     assert.equal(retValue[1].ruleId, 'awesomeRule2');
-    assert.equal(retValue[1].description, 'also some interesting information');
-    assert.equal(retValue[1].help, 'halp me!');
-    assert.equal(
-      retValue[1].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule2?application=axeAPI'
-    );
     assert.deepEqual(retValue[1].tags, ['tag1', 'tag2']);
     assert.deepEqual(retValue[1].actIds, ['abc123', 'xyz789']);
   });
@@ -117,25 +76,9 @@ describe('axe.getRules', function () {
   it('should return all rules if given empty array', function () {
     var retValue = axe.getRules([]);
     assert.equal(retValue[0].ruleId, 'awesomeRule1');
-    assert.equal(retValue[0].description, 'some interesting information');
-    assert.equal(retValue[0].help, 'halp');
-    assert.equal(
-      retValue[0].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule1?application=axeAPI'
-    );
     assert.deepEqual(retValue[0].tags, ['tag1']);
 
     assert.equal(retValue[1].ruleId, 'awesomeRule2');
-    assert.equal(retValue[1].description, 'also some interesting information');
-    assert.equal(retValue[1].help, 'halp me!');
-    assert.equal(
-      retValue[1].helpUrl,
-      'https://dequeuniversity.com/rules/axe/' +
-        ver +
-        '/awesomeRule2?application=axeAPI'
-    );
     assert.deepEqual(retValue[1].tags, ['tag1', 'tag2']);
     assert.deepEqual(retValue[1].actIds, ['abc123', 'xyz789']);
   });
diff --git a/test/core/public/run-rules.js b/test/core/public/run-rules.js
index 778b2364..32dc2829 100644
--- a/test/core/public/run-rules.js
+++ b/test/core/public/run-rules.js
@@ -1,6 +1,5 @@
 describe('runRules', function () {
   'use strict';
-  var ver = axe.version.substring(0, axe.version.lastIndexOf('.'));
 
   function iframeReady(src, context, id, cb) {
     var i = document.createElement('iframe');
@@ -204,10 +203,6 @@ describe('runRules', function () {
               assert.deepEqual(JSON.parse(JSON.stringify(results)), [
                 {
                   id: 'div#target',
-                  helpUrl:
-                    'https://dequeuniversity.com/rules/axe/' +
-                    ver +
-                    '/div#target?application=axeAPI',
                   pageLevel: false,
                   impact: null,
                   inapplicable: [],
@@ -246,10 +241,6 @@ describe('runRules', function () {
                 },
                 {
                   id: 'first-div',
-                  helpUrl:
-                    'https://dequeuniversity.com/rules/axe/' +
-                    ver +
-                    '/first-div?application=axeAPI',
                   pageLevel: false,
                   impact: null,
                   inapplicable: [],
@@ -517,10 +508,6 @@ describe('runRules', function () {
           assert.deepEqual(JSON.parse(JSON.stringify(results)), [
             {
               id: 'div#target',
-              helpUrl:
-                'https://dequeuniversity.com/rules/axe/' +
-                ver +
-                '/div#target?application=axeAPI',
               pageLevel: false,
               foo: 'bar',
               stuff: 'blah',
@@ -560,10 +547,6 @@ describe('runRules', function () {
             },
             {
               id: 'first-div',
-              helpUrl:
-                'https://dequeuniversity.com/rules/axe/' +
-                ver +
-                '/first-div?application=axeAPI',
               pageLevel: false,
               bar: 'foo',
               stuff: 'no',
diff --git a/test/core/public/run-virtual-rule.js b/test/core/public/run-virtual-rule.js
index 8ceda376..d5ea428f 100644
--- a/test/core/public/run-virtual-rule.js
+++ b/test/core/public/run-virtual-rule.js
@@ -188,7 +188,5 @@ describe('axe.runVirtualRule', function () {
     assert.isDefined(results.passes);
     assert.isDefined(results.incomplete);
     assert.isDefined(results.inapplicable);
-    assert.isDefined(results.testEngine);
-    assert.isDefined(results.toolOptions);
   });
 });
diff --git a/test/core/reporters/na.js b/test/core/reporters/na.js
index a9c67772..c0e3fcdb 100644
--- a/test/core/reporters/na.js
+++ b/test/core/reporters/na.js
@@ -4,8 +4,6 @@ describe('reporters - na', function () {
     _results = [
       {
         id: 'noMatch',
-        helpUrl: 'somewhere',
-        description: 'stuff',
         result: 'inapplicable',
         impact: null,
         tags: ['tag3'],
@@ -14,8 +12,6 @@ describe('reporters - na', function () {
       },
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         result: 'passed',
         impact: null,
         tags: ['tag1'],
@@ -48,7 +44,6 @@ describe('reporters - na', function () {
       },
       {
         id: 'idkStuff',
-        description: 'something more nifty',
         pageLevel: true,
         result: 'failed',
         impact: 'cats',
@@ -134,13 +129,6 @@ describe('reporters - na', function () {
       assert.deepEqual(results.inapplicable[0].tags, ['tag3']);
     });
   });
-  it('should add the rule help to the rule result', function () {
-    axe.getReporter('na')(runResults, {}, function (results) {
-      assert.ok(!results.violations[0].helpUrl);
-      assert.equal(results.passes[0].helpUrl, 'things');
-      assert.equal(results.inapplicable[0].helpUrl, 'somewhere');
-    });
-  });
   it('should add the html to the node data', function () {
     axe.getReporter('na')(runResults, {}, function (results) {
       assert.ok(results.violations[0].nodes);
@@ -163,12 +151,6 @@ describe('reporters - na', function () {
       ]);
     });
   });
-  it('should add the description to the rule result', function () {
-    axe.getReporter('na')(runResults, {}, function (results) {
-      assert.equal(results.violations[0].description, 'something more nifty');
-      assert.equal(results.passes[0].description, 'something nifty');
-    });
-  });
   it('should add the impact to the rule result', function () {
     axe.getReporter('na')(runResults, {}, function (results) {
       assert.equal(results.violations[0].impact, 'cats');
@@ -205,9 +187,6 @@ describe('reporters - na', function () {
   it('should add environment data', function () {
     axe.getReporter('na')(runResults, {}, function (results) {
       assert.isDefined(results.url);
-      assert.isDefined(results.timestamp);
-      assert.isDefined(results.testEnvironment);
-      assert.isDefined(results.testRunner);
     });
   });
   it('should add toolOptions property', function () {
@@ -225,9 +204,6 @@ describe('reporters - na', function () {
       function (results) {
         assert.equal(results.myReporter, 'hello world');
         assert.isUndefined(results.url);
-        assert.isUndefined(results.timestamp);
-        assert.isUndefined(results.testEnvironment);
-        assert.isUndefined(results.testRunner);
       }
     );
   });
diff --git a/test/core/reporters/no-passes.js b/test/core/reporters/no-passes.js
index 59476173..1aae7ece 100644
--- a/test/core/reporters/no-passes.js
+++ b/test/core/reporters/no-passes.js
@@ -4,8 +4,6 @@ describe('reporters - no-passes', function () {
     _results = [
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         tags: ['tag1'],
         result: 'passed',
         impact: null,
@@ -116,11 +114,6 @@ describe('reporters - no-passes', function () {
       assert.deepEqual(results.violations[0].tags, ['tag2']);
     });
   });
-  it('should add the rule help to the rule result', function () {
-    axe.getReporter('no-passes')(runResults, {}, function (results) {
-      assert.isNotOk(results.violations[0].helpUrl);
-    });
-  });
   it('should add the html to the node data', function () {
     axe.getReporter('no-passes')(runResults, {}, function (results) {
       assert.ok(results.violations[0].nodes);
@@ -142,11 +135,6 @@ describe('reporters - no-passes', function () {
       ]);
     });
   });
-  it('should add the description to the rule result', function () {
-    axe.getReporter('no-passes')(runResults, {}, function (results) {
-      assert.equal(results.violations[0].description, 'something more nifty');
-    });
-  });
   it('should add the impact to the rule result', function () {
     axe.getReporter('no-passes')(runResults, {}, function (results) {
       assert.equal(results.violations[0].impact, 'cats');
@@ -169,9 +157,6 @@ describe('reporters - no-passes', function () {
   it('should add environment data', function () {
     axe.getReporter('no-passes')(runResults, {}, function (results) {
       assert.isDefined(results.url);
-      assert.isDefined(results.timestamp);
-      assert.isDefined(results.testEnvironment);
-      assert.isDefined(results.testRunner);
     });
   });
   it('should add toolOptions property', function () {
@@ -189,9 +174,6 @@ describe('reporters - no-passes', function () {
       function (results) {
         assert.equal(results.myReporter, 'hello world');
         assert.isUndefined(results.url);
-        assert.isUndefined(results.timestamp);
-        assert.isUndefined(results.testEnvironment);
-        assert.isUndefined(results.testRunner);
       }
     );
   });
diff --git a/test/core/reporters/raw-env.js b/test/core/reporters/raw-env.js
index 84550453..d8d91086 100644
--- a/test/core/reporters/raw-env.js
+++ b/test/core/reporters/raw-env.js
@@ -15,8 +15,6 @@ describe('reporters - raw-env', function () {
     runResults = [
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         tags: ['tag1'],
         result: 'passed',
         violations: [],
@@ -37,7 +35,6 @@ describe('reporters - raw-env', function () {
       },
       {
         id: 'idkStuff',
-        description: 'something more nifty',
         pageLevel: true,
         result: 'failed',
         impact: 'cats',
@@ -62,7 +59,6 @@ describe('reporters - raw-env', function () {
       },
       {
         id: 'bypass',
-        description: 'something even more nifty',
         tags: ['tag3'],
         impact: 'monkeys',
         result: 'failed',
@@ -86,7 +82,6 @@ describe('reporters - raw-env', function () {
       },
       {
         id: 'blinky',
-        description: 'something awesome',
         tags: ['tag4'],
         violations: [],
         result: 'passed',
@@ -131,9 +126,6 @@ describe('reporters - raw-env', function () {
     axe.getReporter('rawEnv')(runResults, {}, function (results) {
       assert.isDefined(results.env);
       assert.isDefined(results.env.url);
-      assert.isDefined(results.env.timestamp);
-      assert.isDefined(results.env.testEnvironment);
-      assert.isDefined(results.env.testRunner);
     });
   });
 
diff --git a/test/core/reporters/raw.js b/test/core/reporters/raw.js
index 61648759..c1cc2da5 100644
--- a/test/core/reporters/raw.js
+++ b/test/core/reporters/raw.js
@@ -15,8 +15,6 @@ describe('reporters - raw', function () {
     runResults = [
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         tags: ['tag1'],
         result: 'passed',
         violations: [],
@@ -37,7 +35,6 @@ describe('reporters - raw', function () {
       },
       {
         id: 'idkStuff',
-        description: 'something more nifty',
         pageLevel: true,
         result: 'failed',
         impact: 'cats',
diff --git a/test/core/reporters/v1.js b/test/core/reporters/v1.js
index 8ebc2c55..ccded897 100644
--- a/test/core/reporters/v1.js
+++ b/test/core/reporters/v1.js
@@ -4,8 +4,6 @@ describe('reporters - v1', function () {
     _results = [
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         tags: ['tag1'],
         result: 'passed',
         violations: [],
@@ -30,7 +28,6 @@ describe('reporters - v1', function () {
       },
       {
         id: 'idkStuff',
-        description: 'something more nifty',
         pageLevel: true,
         result: 'failed',
         impact: 'cats',
@@ -58,7 +55,6 @@ describe('reporters - v1', function () {
       },
       {
         id: 'bypass',
-        description: 'something even more nifty',
         tags: ['tag3'],
         impact: 'monkeys',
         result: 'failed',
@@ -85,7 +81,6 @@ describe('reporters - v1', function () {
       },
       {
         id: 'incomplete',
-        description: 'something yet more nifty',
         tags: ['tag4'],
         impact: 'monkeys',
         result: 'failed',
@@ -113,7 +108,6 @@ describe('reporters - v1', function () {
       },
       {
         id: 'blinky',
-        description: 'something awesome',
         tags: ['tag4'],
         violations: [],
         result: 'passed',
@@ -212,14 +206,6 @@ describe('reporters - v1', function () {
       assert.deepEqual(results.passes[1].tags, ['tag4']);
     });
   });
-  it('should add the rule help to the rule result', function () {
-    axe.getReporter('v1')(runResults, {}, function (results) {
-      assert.isNotOk(results.violations[0].helpUrl);
-      assert.isNotOk(results.violations[1].helpUrl);
-      assert.equal(results.passes[0].helpUrl, 'things');
-      assert.isNotOk(results.passes[1].helpUrl);
-    });
-  });
   it('should add the html to the node data', function () {
     axe.getReporter('v1')(runResults, {}, function (results) {
       assert.ok(results.violations[0].nodes);
@@ -264,17 +250,6 @@ describe('reporters - v1', function () {
       ]);
     });
   });
-  it('should add the description to the rule result', function () {
-    axe.getReporter('v1')(runResults, {}, function (results) {
-      assert.equal(results.violations[0].description, 'something more nifty');
-      assert.equal(
-        results.violations[1].description,
-        'something even more nifty'
-      );
-      assert.equal(results.passes[0].description, 'something nifty');
-      assert.equal(results.passes[1].description, 'something awesome');
-    });
-  });
   it('should add the impact to the rule result', function () {
     axe.getReporter('v1')(runResults, {}, function (results) {
       assert.equal(results.violations[0].impact, 'cats');
@@ -286,9 +261,6 @@ describe('reporters - v1', function () {
   it('should add environment data', function () {
     axe.getReporter('v1')(runResults, {}, function (results) {
       assert.isDefined(results.url);
-      assert.isDefined(results.timestamp);
-      assert.isDefined(results.testEnvironment);
-      assert.isDefined(results.testRunner);
     });
   });
   it('should add toolOptions property', function () {
@@ -306,9 +278,6 @@ describe('reporters - v1', function () {
       function (results) {
         assert.equal(results.myReporter, 'hello world');
         assert.isUndefined(results.url);
-        assert.isUndefined(results.timestamp);
-        assert.isUndefined(results.testEnvironment);
-        assert.isUndefined(results.testRunner);
       }
     );
   });
diff --git a/test/core/reporters/v2.js b/test/core/reporters/v2.js
index 29d13b6f..f84015fc 100644
--- a/test/core/reporters/v2.js
+++ b/test/core/reporters/v2.js
@@ -4,8 +4,6 @@ describe('reporters - v2', function () {
     _results = [
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         result: 'passed',
         impact: null,
         tags: ['tag1'],
@@ -38,7 +36,6 @@ describe('reporters - v2', function () {
       },
       {
         id: 'idkStuff',
-        description: 'something more nifty',
         pageLevel: true,
         result: 'failed',
         impact: 'cats',
@@ -119,12 +116,6 @@ describe('reporters - v2', function () {
       assert.deepEqual(results.passes[0].tags, ['tag1']);
     });
   });
-  it('should add the rule help to the rule result', function () {
-    axe.getReporter('v2')(runResults, {}, function (results) {
-      assert.isNotOk(results.violations[0].helpUrl);
-      assert.equal(results.passes[0].helpUrl, 'things');
-    });
-  });
   it('should add the html to the node data', function () {
     axe.getReporter('v2')(runResults, {}, function (results) {
       assert.ok(results.violations[0].nodes);
@@ -147,12 +138,6 @@ describe('reporters - v2', function () {
       ]);
     });
   });
-  it('should add the description to the rule result', function () {
-    axe.getReporter('v2')(runResults, {}, function (results) {
-      assert.equal(results.violations[0].description, 'something more nifty');
-      assert.equal(results.passes[0].description, 'something nifty');
-    });
-  });
   it('should add the impact to the rule result', function () {
     axe.getReporter('v2')(runResults, {}, function (results) {
       assert.equal(results.violations[0].impact, 'cats');
@@ -187,9 +172,6 @@ describe('reporters - v2', function () {
   it('should add environment data', function () {
     axe.getReporter('v2')(runResults, {}, function (results) {
       assert.isDefined(results.url);
-      assert.isDefined(results.timestamp);
-      assert.isDefined(results.testEnvironment);
-      assert.isDefined(results.testRunner);
     });
   });
   it('should add toolOptions property', function () {
@@ -207,9 +189,6 @@ describe('reporters - v2', function () {
       function (results) {
         assert.equal(results.myReporter, 'hello world');
         assert.isUndefined(results.url);
-        assert.isUndefined(results.timestamp);
-        assert.isUndefined(results.testEnvironment);
-        assert.isUndefined(results.testRunner);
       }
     );
   });
diff --git a/test/core/utils/aggregateResult.js b/test/core/utils/aggregateResult.js
index 5eb70d9b..0f24ec93 100644
--- a/test/core/utils/aggregateResult.js
+++ b/test/core/utils/aggregateResult.js
@@ -5,8 +5,6 @@ describe('axe.utils.aggregateResult', function () {
     _results = [
       {
         id: 'gimmeLabel',
-        helpUrl: 'things',
-        description: 'something nifty',
         tags: ['tag1'],
         result: 'passed',
         violations: [],
@@ -31,7 +29,6 @@ describe('axe.utils.aggregateResult', function () {
       },
       {
         id: 'bypass',
-        description: 'something even more nifty',
         tags: ['tag3'],
         impact: 'monkeys',
         result: 'failed',
diff --git a/test/core/utils/collect-results-from-frames.js b/test/core/utils/collect-results-from-frames.js
index 6cb3193c..b8974c6c 100644
--- a/test/core/utils/collect-results-from-frames.js
+++ b/test/core/utils/collect-results-from-frames.js
@@ -1,236 +1,236 @@
-describe('axe.utils.collectResultsFromFrames', function () {
-  'use strict';
-
-  var Context = axe._thisWillBeDeletedDoNotUse.base.Context;
-  var fixture = document.getElementById('fixture');
-  var noop = function () {};
-  var origSetTimeout = window.setTimeout;
-
-  function contextSetup(scope) {
-    var context = new Context(scope);
-    axe._tree = context.flatTree;
-    axe._selectorData = axe.utils.getSelectorData(context.flatTree);
-
-    return context;
-  }
-
-  afterEach(function () {
-    window.setTimeout = origSetTimeout;
-    fixture.innerHTML = '';
-    axe._tree = undefined;
-    axe._selectorData = undefined;
-  });
-
-  it('should timeout the ping request after 500ms', function (done) {
-    this.timeout = 1000;
-
-    var timeoutSet = false;
-    window.setTimeout = function (fn, to) {
-      if (to === 500) {
-        timeoutSet = true;
-        fn();
-      } else {
-        // ping timeout
-        return origSetTimeout(fn, to);
-      }
-      return 'cats';
-    };
-
-    var frame = document.createElement('iframe');
-    frame.addEventListener('load', function () {
-      var context = contextSetup(document);
-
-      axe.utils.collectResultsFromFrames(
-        context,
-        {},
-        'stuff',
-        'morestuff',
-        function () {
-          assert.isTrue(timeoutSet);
-          done();
-        },
-        noop
-      );
-    });
-
-    frame.id = 'level0';
-    frame.src = '../mock/frames/results-timeout.html';
-    fixture.appendChild(frame);
-  });
-
-  it('should override the ping timeout with `options.pingWaitTime`, if provided', function (done) {
-    this.timeout = 1000;
-
-    var timeoutSet = false;
-    window.setTimeout = function (fn, to) {
-      if (to === 90000) {
-        timeoutSet = true;
-        fn();
-      } else {
-        // ping timeout
-        return origSetTimeout(fn, to);
-      }
-      return 'cats';
-    };
-
-    var frame = document.createElement('iframe');
-    frame.addEventListener('load', function () {
-      var context = contextSetup(document);
-      var params = { pingWaitTime: 90000 };
-
-      axe.utils.collectResultsFromFrames(
-        context,
-        params,
-        'stuff',
-        'morestuff',
-        function () {
-          assert.isTrue(timeoutSet);
-          done();
-        },
-        noop
-      );
-    });
-
-    frame.id = 'level0';
-    frame.src = '../mock/frames/results-timeout.html';
-    fixture.appendChild(frame);
-  });
-
-  it('should timeout the start request after 60s', function (done) {
-    window.setTimeout = function (fn, to) {
-      if (to === 60000) {
-        assert.ok('timeout set');
-        fn();
-      } else {
-        // ping timeout
-        return origSetTimeout(fn, to);
-      }
-      return 'cats';
-    };
-
-    var frame = document.createElement('iframe');
-    frame.addEventListener('load', function () {
-      var context = contextSetup(document);
-      axe.utils.collectResultsFromFrames(
-        context,
-        {},
-        'stuff',
-        'morestuff',
-        noop,
-        function (err) {
-          assert.instanceOf(err, Error);
-          assert.equal(err.message.split(/: /)[0], 'Axe in frame timed out');
-          done();
-        }
-      );
-    });
-
-    frame.id = 'level0';
-    frame.src = '../mock/frames/results-timeout.html';
-    fixture.appendChild(frame);
-  });
-
-  it('should override the start timeout with `options.frameWaitTime`, if provided', function (done) {
-    window.setTimeout = function (fn, to) {
-      if (to === 90000) {
-        assert.ok('timeout set');
-        fn();
-      } else {
-        // ping timeout
-        return origSetTimeout(fn, to);
-      }
-      return 'cats';
-    };
-
-    var frame = document.createElement('iframe');
-    frame.addEventListener('load', function () {
-      var context = contextSetup(document);
-      var params = { frameWaitTime: 90000 };
-
-      axe.utils.collectResultsFromFrames(
-        context,
-        params,
-        'stuff',
-        'morestuff',
-        noop,
-        function (err) {
-          assert.instanceOf(err, Error);
-          assert.equal(err.message.split(/: /)[0], 'Axe in frame timed out');
-          done();
-        }
-      );
-    });
-
-    frame.id = 'level0';
-    frame.src = '../mock/frames/results-timeout.html';
-    fixture.appendChild(frame);
-  });
-
-  it('should not throw given a recursive iframe', function (done) {
-    axe._load({
-      rules: [
-        {
-          id: 'iframe',
-          selector: 'iframe',
-          any: [
-            {
-              id: 'iframe',
-              evaluate: function () {
-                return true;
-              }
-            }
-          ]
-        }
-      ],
-      messages: {}
-    });
-
-    var frame = document.createElement('iframe');
-    frame.addEventListener('load', function () {
-      var context = contextSetup(document);
-
-      axe.utils.collectResultsFromFrames(
-        context,
-        {},
-        'rules',
-        'morestuff',
-        function () {
-          done();
-        },
-        function (e) {
-          assert.ok(false, e);
-          done();
-        }
-      );
-    });
-
-    frame.id = 'level0';
-    frame.src = '../mock/frames/nested0.html';
-    fixture.appendChild(frame);
-  });
-
-  it('returns errors send from the frame', function (done) {
-    var frame = document.createElement('iframe');
-    frame.addEventListener('load', function () {
-      var context = contextSetup(document);
-      axe.utils.collectResultsFromFrames(
-        context,
-        {},
-        'rules',
-        'morestuff',
-        function () {
-          done(new Error('Should not be called'));
-        },
-        function (err) {
-          assert.instanceOf(err, Error);
-          assert.equal(err.message.split(/\n/)[0], 'error in axe.throw');
-          done();
-        }
-      );
-    });
-
-    frame.id = 'level0';
-    frame.src = '../mock/frames/throwing.html';
-    fixture.appendChild(frame);
-  });
-});
+// describe('axe.utils.collectResultsFromFrames', function () {
+//   'use strict';
+
+//   var Context = axe._thisWillBeDeletedDoNotUse.base.Context;
+//   var fixture = document.getElementById('fixture');
+//   var noop = function () {};
+//   var origSetTimeout = window.setTimeout;
+
+//   function contextSetup(scope) {
+//     var context = new Context(scope);
+//     axe._tree = context.flatTree;
+//     axe._selectorData = axe.utils.getSelectorData(context.flatTree);
+
+//     return context;
+//   }
+
+//   afterEach(function () {
+//     window.setTimeout = origSetTimeout;
+//     fixture.innerHTML = '';
+//     axe._tree = undefined;
+//     axe._selectorData = undefined;
+//   });
+
+//   it('should timeout the ping request after 500ms', function (done) {
+//     this.timeout = 1000;
+
+//     var timeoutSet = false;
+//     window.setTimeout = function (fn, to) {
+//       if (to === 500) {
+//         timeoutSet = true;
+//         fn();
+//       } else {
+//         // ping timeout
+//         return origSetTimeout(fn, to);
+//       }
+//       return 'cats';
+//     };
+
+//     var frame = document.createElement('iframe');
+//     frame.addEventListener('load', function () {
+//       var context = contextSetup(document);
+
+//       axe.utils.collectResultsFromFrames(
+//         context,
+//         {},
+//         'stuff',
+//         'morestuff',
+//         function () {
+//           assert.isTrue(timeoutSet);
+//           done();
+//         },
+//         noop
+//       );
+//     });
+
+//     frame.id = 'level0';
+//     frame.src = '../mock/frames/results-timeout.html';
+//     fixture.appendChild(frame);
+//   });
+
+//   it('should override the ping timeout with `options.pingWaitTime`, if provided', function (done) {
+//     this.timeout = 1000;
+
+//     var timeoutSet = false;
+//     window.setTimeout = function (fn, to) {
+//       if (to === 90000) {
+//         timeoutSet = true;
+//         fn();
+//       } else {
+//         // ping timeout
+//         return origSetTimeout(fn, to);
+//       }
+//       return 'cats';
+//     };
+
+//     var frame = document.createElement('iframe');
+//     frame.addEventListener('load', function () {
+//       var context = contextSetup(document);
+//       var params = { pingWaitTime: 90000 };
+
+//       axe.utils.collectResultsFromFrames(
+//         context,
+//         params,
+//         'stuff',
+//         'morestuff',
+//         function () {
+//           assert.isTrue(timeoutSet);
+//           done();
+//         },
+//         noop
+//       );
+//     });
+
+//     frame.id = 'level0';
+//     frame.src = '../mock/frames/results-timeout.html';
+//     fixture.appendChild(frame);
+//   });
+
+//   it('should timeout the start request after 60s', function (done) {
+//     window.setTimeout = function (fn, to) {
+//       if (to === 60000) {
+//         assert.ok('timeout set');
+//         fn();
+//       } else {
+//         // ping timeout
+//         return origSetTimeout(fn, to);
+//       }
+//       return 'cats';
+//     };
+
+//     var frame = document.createElement('iframe');
+//     frame.addEventListener('load', function () {
+//       var context = contextSetup(document);
+//       axe.utils.collectResultsFromFrames(
+//         context,
+//         {},
+//         'stuff',
+//         'morestuff',
+//         noop,
+//         function (err) {
+//           assert.instanceOf(err, Error);
+//           assert.equal(err.message.split(/: /)[0], 'Axe in frame timed out');
+//           done();
+//         }
+//       );
+//     });
+
+//     frame.id = 'level0';
+//     frame.src = '../mock/frames/results-timeout.html';
+//     fixture.appendChild(frame);
+//   });
+
+//   it('should override the start timeout with `options.frameWaitTime`, if provided', function (done) {
+//     window.setTimeout = function (fn, to) {
+//       if (to === 90000) {
+//         assert.ok('timeout set');
+//         fn();
+//       } else {
+//         // ping timeout
+//         return origSetTimeout(fn, to);
+//       }
+//       return 'cats';
+//     };
+
+//     var frame = document.createElement('iframe');
+//     frame.addEventListener('load', function () {
+//       var context = contextSetup(document);
+//       var params = { frameWaitTime: 90000 };
+
+//       axe.utils.collectResultsFromFrames(
+//         context,
+//         params,
+//         'stuff',
+//         'morestuff',
+//         noop,
+//         function (err) {
+//           assert.instanceOf(err, Error);
+//           assert.equal(err.message.split(/: /)[0], 'Axe in frame timed out');
+//           done();
+//         }
+//       );
+//     });
+
+//     frame.id = 'level0';
+//     frame.src = '../mock/frames/results-timeout.html';
+//     fixture.appendChild(frame);
+//   });
+
+//   it('should not throw given a recursive iframe', function (done) {
+//     axe._load({
+//       rules: [
+//         {
+//           id: 'iframe',
+//           selector: 'iframe',
+//           any: [
+//             {
+//               id: 'iframe',
+//               evaluate: function () {
+//                 return true;
+//               }
+//             }
+//           ]
+//         }
+//       ],
+//       messages: {}
+//     });
+
+//     var frame = document.createElement('iframe');
+//     frame.addEventListener('load', function () {
+//       var context = contextSetup(document);
+
+//       axe.utils.collectResultsFromFrames(
+//         context,
+//         {},
+//         'rules',
+//         'morestuff',
+//         function () {
+//           done();
+//         },
+//         function (e) {
+//           assert.ok(false, e);
+//           done();
+//         }
+//       );
+//     });
+
+//     frame.id = 'level0';
+//     frame.src = '../mock/frames/nested0.html';
+//     fixture.appendChild(frame);
+//   });
+
+//   it('returns errors send from the frame', function (done) {
+//     var frame = document.createElement('iframe');
+//     frame.addEventListener('load', function () {
+//       var context = contextSetup(document);
+//       axe.utils.collectResultsFromFrames(
+//         context,
+//         {},
+//         'rules',
+//         'morestuff',
+//         function () {
+//           done(new Error('Should not be called'));
+//         },
+//         function (err) {
+//           assert.instanceOf(err, Error);
+//           assert.equal(err.message.split(/\n/)[0], 'error in axe.throw');
+//           done();
+//         }
+//       );
+//     });
+
+//     frame.id = 'level0';
+//     frame.src = '../mock/frames/throwing.html';
+//     fixture.appendChild(frame);
+//   });
+// });
diff --git a/test/core/utils/get-environment-data.js b/test/core/utils/get-environment-data.js
index 6669e9b3..9b4a2d88 100644
--- a/test/core/utils/get-environment-data.js
+++ b/test/core/utils/get-environment-data.js
@@ -22,34 +22,6 @@ describe('utils.getEnvironmentData', function () {
     assert.equal(input, output);
   });
 
-  it('should return a `testEngine` property', function () {
-    var data = getEnvironmentData();
-    assert.isObject(data.testEngine);
-    assert.equal(data.testEngine.name, 'axe-core');
-    assert.equal(data.testEngine.version, axe.version);
-  });
-
-  it('should return a `testRunner` property', function () {
-    var data = getEnvironmentData();
-    assert.isObject(data.testRunner);
-    assert.equal(data.testRunner.name, axe._audit.brand);
-  });
-
-  it('should return a `testEnvironment` property', function () {
-    var data = getEnvironmentData();
-    assert.isObject(data.testEnvironment);
-    assert.ok(data.testEnvironment.userAgent);
-    assert.ok(data.testEnvironment.windowWidth);
-    assert.ok(data.testEnvironment.windowHeight);
-    assert.isNotNull(data.testEnvironment.orientationAngle);
-    assert.isNotNull(data.testEnvironment.orientationType);
-  });
-
-  it('should return a `timestamp` property`', function () {
-    var data = getEnvironmentData();
-    assert.isDefined(data.timestamp);
-  });
-
   it('should return a `url` property', function () {
     var data = getEnvironmentData();
     assert.isDefined(data.url);
@@ -78,20 +50,6 @@ describe('utils.getEnvironmentData', function () {
 
     delete data.timestamp;
     assert.deepEqual(data, {
-      testEngine: {
-        name: 'axe-core',
-        version: axe.version
-      },
-      testRunner: {
-        name: axe._audit.brand
-      },
-      testEnvironment: {
-        userAgent: 'foo',
-        windowWidth: 321,
-        windowHeight: 123,
-        orientationAngle: 'slanted',
-        orientationType: 'fictional'
-      },
       url: 'foo://'
     });
   });
diff --git a/test/integration/full/all-rules/all-rules.js b/test/integration/full/all-rules/all-rules.js
index 4daeaa73..5e3a381b 100644
--- a/test/integration/full/all-rules/all-rules.js
+++ b/test/integration/full/all-rules/all-rules.js
@@ -15,8 +15,6 @@ describe('all rules test', () => {
     const endButton = document.querySelector('#end-of-page');
     endButton.focus();
     const scrollResults = await axe.run();
-    scrollResults.testEnvironment = results.testEnvironment;
-    scrollResults.timestamp = results.timestamp;
     assert.deepEqual(results, scrollResults);
   });
 });
diff --git a/test/integration/full/async/async.js b/test/integration/full/async/async.js
index 6992adfe..b30d44f8 100644
--- a/test/integration/full/async/async.js
+++ b/test/integration/full/async/async.js
@@ -27,11 +27,6 @@ describe('async rule test', function () {
       rules: [
         {
           id: 'my-async',
-          metadata: {
-            description: '',
-            help: '',
-            helpUrl: 'https://example.com/dylang'
-          },
           selector: '.async',
           any: ['my-async'],
           all: [],
diff --git a/test/integration/full/run-partial/after-method.js b/test/integration/full/run-partial/after-method.js
index 88fdfdd6..91f2d3dc 100644
--- a/test/integration/full/run-partial/after-method.js
+++ b/test/integration/full/run-partial/after-method.js
@@ -22,8 +22,6 @@ describe('run-partial, after-method', function () {
         var axeRunPartialResult = results[0];
         var axeRunResult = results[1];
         assert.lengthOf(axeRunPartialResult.violations, 0);
-        axeRunPartialResult.testEnvironment = axeRunResult.testEnvironment;
-        axeRunPartialResult.timestamp = axeRunResult.timestamp;
         assert.deepEqual(axeRunPartialResult, axeRunResult);
         done();
       })
diff --git a/test/integration/full/run-partial/context-size-focusable.js b/test/integration/full/run-partial/context-size-focusable.js
index 03c56ca0..cb7f3285 100644
--- a/test/integration/full/run-partial/context-size-focusable.js
+++ b/test/integration/full/run-partial/context-size-focusable.js
@@ -25,8 +25,6 @@ describe('run-partial, context-size-focusable', function () {
         var axeRunPartialResult = results[0];
         var axeRunResult = results[1];
         assert.lengthOf(axeRunPartialResult.violations, 0);
-        axeRunPartialResult.testEnvironment = axeRunResult.testEnvironment;
-        axeRunPartialResult.timestamp = axeRunResult.timestamp;
         assert.deepEqual(axeRunPartialResult, axeRunResult);
         done();
       })
diff --git a/test/integration/full/run-partial/initiator.js b/test/integration/full/run-partial/initiator.js
index 8c0dff6a..d7eb2d15 100644
--- a/test/integration/full/run-partial/initiator.js
+++ b/test/integration/full/run-partial/initiator.js
@@ -22,8 +22,6 @@ describe('run-partial, initiator', function () {
         var axeRunPartialResult = results[0];
         var axeRunResult = results[1];
         assert.lengthOf(axeRunPartialResult.violations, 0);
-        axeRunPartialResult.testEnvironment = axeRunResult.testEnvironment;
-        axeRunPartialResult.timestamp = axeRunResult.timestamp;
         assert.deepEqual(axeRunPartialResult, axeRunResult);
         done();
       })
diff --git a/test/integration/full/run-partial/page-level.js b/test/integration/full/run-partial/page-level.js
index 589058ef..4588ad44 100644
--- a/test/integration/full/run-partial/page-level.js
+++ b/test/integration/full/run-partial/page-level.js
@@ -31,8 +31,6 @@ describe('run-partial, page-level', function () {
         var axeRunResult = results[1];
         assert.lengthOf(axeRunPartialResult.incomplete, 0);
         assert.lengthOf(axeRunPartialResult.passes, 0);
-        axeRunPartialResult.timestamp = axeRunResult.timestamp;
-        axeRunPartialResult.testEnvironment = axeRunResult.testEnvironment;
         assert.deepEqual(axeRunPartialResult, axeRunResult);
         done();
       })
diff --git a/test/testutils.js b/test/testutils.js
index 843441bb..e0fa662d 100644
--- a/test/testutils.js
+++ b/test/testutils.js
@@ -481,80 +481,7 @@ testUtils.getCheckEvaluate = function getCheckEvaluate(checkId, testOptions) {
   var evaluateWrapper = function (node, options, virtualNode, context) {
     var opts = check.getOptions(options);
 
-    var result = check.evaluate.call(this, node, opts, virtualNode, context);
-
-    // ensure that every result has a corresponding message
-    if (testOptions.verifyMessage !== false) {
-      var messages = axe._audit.data.checks[checkId].messages;
-      var messageKey = this._data && this._data.messageKey;
-
-      // see how the check is used to know where to find the message
-      // e.g. a check used only in the `none` array of a rule will look at
-      // the messageKey of a passing result in the `fail` messages
-      var keyResult = result;
-      var isNoneCheck = noneChecks.indexOf(checkId) !== -1;
-      if (isNoneCheck) {
-        keyResult = result === true ? false : result === false ? true : result;
-      }
-
-      var key =
-        keyResult === true
-          ? 'pass'
-          : keyResult === false
-          ? 'fail'
-          : 'incomplete';
-      var noneCheckMessage = isNoneCheck
-        ? '. Note that since this check is only used in the "none" array of all rules, the messages use the inverse of the result (e.g. a result of false uses the "pass" messages)'
-        : '';
-
-      assert.exists(
-        messages[key],
-        'Missing "' +
-          key +
-          '" message for check result of ' +
-          result +
-          noneCheckMessage
-      );
-      if (messageKey) {
-        assert.exists(
-          messages[key][messageKey],
-          'Missing ' +
-            key +
-            ' message key "' +
-            messageKey +
-            '" for check result of ' +
-            result +
-            noneCheckMessage
-        );
-
-        var message = axe.utils.processMessage(
-          messages[key][messageKey],
-          this._data
-        );
-        assert.isTrue(
-          message.indexOf('${') === -1,
-          'Data object missing properties for ' +
-            key +
-            ' message key "' +
-            messageKey +
-            '": "' +
-            message +
-            '"'
-        );
-      } else {
-        var message = axe.utils.processMessage(messages[key], this._data);
-        assert.isTrue(
-          message.indexOf('${') === -1,
-          'Data object missing properties for ' +
-            key +
-            ' message: "' +
-            message +
-            '"'
-        );
-      }
-    }
-
-    return result;
+    return check.evaluate.call(this, node, opts, virtualNode, context);
   };
   return evaluateWrapper;
 };
diff --git a/typings/axe-core/axe-core-tests.ts b/typings/axe-core/axe-core-tests.ts
index 309dc9e7..1475d75a 100644
--- a/typings/axe-core/axe-core-tests.ts
+++ b/typings/axe-core/axe-core-tests.ts
@@ -265,9 +265,6 @@ var spec: axe.Spec = {
       id: 'custom-rule',
       any: ['custom-check'],
       metadata: {
-        description: 'custom rule',
-        help: 'different help',
-        helpUrl: 'https://example.com',
         tags: ['custom']
       }
     }
-- 
2.37.1 (Apple Git-137.1)

